{"componentChunkName":"component---src-templates-blog-template-js","path":"/vi/","result":{"data":{"cur":{"id":"f747237a-86f5-5b74-96bb-de33bccf8b69","html":"<p>vim 에디터를 사용할 때 .vimrc를 편집하여 아래와 같은 설정을 추가해주면 좋다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">syntax on\n<span class=\"token builtin class-name\">set</span> autoindent\n<span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">laststatus</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">tabstop</span><span class=\"token operator\">=</span><span class=\"token number\">4</span>\n<span class=\"token builtin class-name\">set</span> smartindent\n<span class=\"token builtin class-name\">set</span> expandtab\n<span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">shiftwidth</span><span class=\"token operator\">=</span><span class=\"token number\">4</span>\n<span class=\"token builtin class-name\">set</span> number</code></pre></div>","excerpt":"vim 에디터를 사용할 때 .vimrc를 편집하여 아래와 같은 설정을 추가해주면 좋다.","frontmatter":{"date":"January 18, 2023","title":"VI editor option","categories":"Linux","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/vi/"}},"next":{"id":"9882074b-675d-51f4-91ae-17e30d1eaa94","html":"<p>개발, 검증계와 동일한 prometheus의 yaml파일로 운영에서 pod 생성시 CrashLoopbackOff 상태에 빠지게 된다.\n<br>\nconfigmap-reload 컨테이너를 제외시키고 prometheus pod의 로그만 확인 시, ‘/mnt/pv/… file not found’ 와 같은 에러가 발생했다.\n실제 pod에서는 컨테이너 기동 시에 해당 tsdb를 찾으려고 하는 모양인데 실제 volume에는 해당 파일이 없는 것으로 pv debugger를 활용하여 확인하였다.</p>\n<blockquote>\n<h4 id=\"pv-debugger-활용\" style=\"position:relative;\"><a href=\"#pv-debugger-%ED%99%9C%EC%9A%A9\" aria-label=\"pv debugger 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PV debugger 활용</h4>\n<p>PV에 직접 접근할 방법이 별도로 없기 떄문에, busybox 이미지를 활용하여 문제가 되는 prometheus의 pvc를 volume으로 설정, mount하여 접근한다.</p>\n</blockquote>\n<ul>\n<li>결국 tsdb의 path로 마운트된 볼륨에서 해당 경로를 백업한 뒤 모두 비워주고 Pod를 기동하니, 새로운 데이터를 쌓으면서 정상적으로 pod가 기동됨을 확인하였다.</li>\n</ul>","frontmatter":{"date":"December 14, 2022","title":"[Error] Prometheus CrashLoopbackOff","categories":"Error DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/error-prometheus/"}},"prev":{"id":"12da607d-f519-5b82-bb76-4a94eca42bb2","html":"<h1 id=\"1-리눅스-기초\" style=\"position:relative;\"><a href=\"#1-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B8%B0%EC%B4%88\" aria-label=\"1 리눅스 기초 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 리눅스 기초</h1>\n<h2 id=\"디렉토리와-파일\" style=\"position:relative;\"><a href=\"#%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC%EC%99%80-%ED%8C%8C%EC%9D%BC\" aria-label=\"디렉토리와 파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디렉토리와 파일</h2>\n<ul>\n<li>기본 명령어\n<ul>\n<li>ls, pwd, mkdir, touch, cd, rm 등</li>\n<li>명령어에 옵션을 붙일 수 있음\n<ul>\n<li>ls -al, rm -r, mkdir -p, ls -S( file size sort desc )</li>\n</ul>\n</li>\n<li>. , .., ~ 의 의미</li>\n</ul>\n</li>\n<li>—help와 man\n<ul>\n<li>man 명령어는 전용 페이지로 넘어가서 보다 상세한 설명을 알려줌.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"sudo\" style=\"position:relative;\"><a href=\"#sudo\" aria-label=\"sudo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sudo</h2>\n<p>관리자의 권한으로 명령을 실행 시 필요함.</p>\n<h2 id=\"패키지-매니저\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80\" aria-label=\"패키지 매니저 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 매니저</h2>\n<p>다양한 소프트웨어들을 패키지라고 한다. 가령 ls, mkdir, man등도 모두 패키지이다.\n하지만 기본적으로 제공하는 프로그램이 아닌 다른 것들은 패키지 매니저를 통해 설치해야 한다.\n일종의 앱스토어라고 생각하면 된다. 우분투 계열의 패키지 매니저인 apt-get 사용법을 알아보자. ( redhat 계열 : yum )</p>\n<p>htop 을 활용하면 CLI기반에서도 꽤나 GUI와 같은 형태로 리소스의 상태를 확인할 수 있다.</p>\n<ul>\n<li>패키지 설치\n<ul>\n<li>sudo apt-get install htop</li>\n</ul>\n</li>\n<li>패키지 검색\n<ul>\n<li>sudo apt-cache search htop</li>\n</ul>\n</li>\n<li>특정 패키지 업데이트\n<ul>\n<li>sudo apt-get upgrade htop</li>\n</ul>\n</li>\n<li>패키지 일괄 업그레이드\n<ul>\n<li>sudo apt-get upgrade</li>\n</ul>\n</li>\n<li>패키지 목록 업데이트\n<ul>\n<li>\n<ul>\n<li>sudo apt-get update</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>패키지 삭제\n<ul>\n<li>sudo apt-get remove htop</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"다운로드-방법\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C-%EB%B0%A9%EB%B2%95\" aria-label=\"다운로드 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다운로드 방법</h2>\n<p>웹 url을 통해서 다운로드 받는 방법에 대해서 알아보자.</p>\n<ul>\n<li>wget\n<ul>\n<li>wget을 통해서 이미지 다운받기</li>\n</ul>\n</li>\n<li>git\n<ul>\n<li>git을 통해서 repo 다운받기</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1 id=\"2-io-redirection\" style=\"position:relative;\"><a href=\"#2-io-redirection\" aria-label=\"2 io redirection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. IO Redirection</h1>\n<p>리눅스에서 돌아가는 process의 결과를 IO redirection을 사용하면 다른 파일로 redirection 할 수 있다.\nredirection 하는 대상은 stdin, stdout, stderr 이다.</p>\n<h3 id=\"output\" style=\"position:relative;\"><a href=\"#output\" aria-label=\"output permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Output</h3>\n<ul>\n<li>stdout</li>\n<li>stderr\n<ul>\n<li>예를 들어 존재하지 않는 파일을 삭제하면 stderr가 출력된다.\n<ul>\n<li>rm non-existing.txt > output.txt 를 하면 안되고 rm non-existing.txt 2> output.txt 이렇게 해줘야 함. rm의 결과로 나오는 에러메시지가 stdout이 아니라 stderr이기 때문이다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"input\" style=\"position:relative;\"><a href=\"#input\" aria-label=\"input permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Input</h3>\n<ul>\n<li>stdin\n<ul>\n<li>stdin은 기본적으로 키보드로 입력받는 input으로 생각하면 된다. stdin이 아닌 다른 input을 process의 입력값으로 주고 싶다면 아래와 같이 파일이나 다른 명령어의 결과를 redirection 시킬 수 있다.\n<ul>\n<li>cat &#x3C; input.txt</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>command-line arguments\n<ul>\n<li>명령어에 필요한 옵션, 인자 같은 것들.</li>\n</ul>\n</li>\n<li>Env variable\n<ul>\n<li>PATH, LANG, HOME, USER, 그 외 사용자 정의 환경변수들..</li>\n<li>env 명령을 통해 환경변수 확인 가능.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1 id=\"스터디-문제\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%84%B0%EB%94%94-%EB%AC%B8%EC%A0%9C\" aria-label=\"스터디 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스터디 문제</h1>\n<p>각자의 /home/{사번}/week1에서 문제를 풀고 마지막에 answer.txt 파일에 답안을 작성해주셔야 합니다. ( 답안 작성 방법은 13번 문제참조 )\n처음 디렉토리는 /home/{사번}/week1인 것으로 가정합니다.</p>\n<ol>\n<li>“Question”라는 이름의 디렉토리를 생성하고, 해당 디렉토리로 이동해보세요.</li>\n<li>이동한 디렉토리에서 q2이라는 empty파일을 만들어보세요.</li>\n<li>해당 디렉토리에서 q3라는 파일을 만들고 vi 편집기 또는 nano편집기를 사용하여 본인의 이메일과 이름을 적어주세요.</li>\n<li>해당 디렉토리에서 파일 목록을 상세하게 리스팅하고, 파일 크기에 따라 내림차순으로 정렬하여 출력하세요.</li>\n<li>현재 디렉토리의 모든 파일/디렉토리를 숨김 파일 포함하여 출력해보세요.</li>\n<li>wget 명령을 사용해서 <a href=\"http://www.example.com/empty.txt\">http://www.example.com/empty.txt</a> url로 파일을 다운받으세요.(가정, 안되더라도 명령어 실행하기)</li>\n<li>git 명령을 사용해서 <a href=\"https://github.com/jjunyong/mdparser\">https://github.com/jjunyong/mdparser</a> 저장소를 다운받으세요.(가정, 안되더라도 명령어 실행하기)</li>\n<li>5번 문제의 결과를 IO redirection을 사용하여 q8이라는 파일로 저장해보세요.</li>\n<li>2번에서 만든 q2 파일을 삭제하세요.</li>\n<li>9번에서 삭제 시 사용한 명령을 그대로 실행하고, 출력되는 stderr 결과를 IO redirection을 사용하여 q10.txt에 저장하세요</li>\n<li>man mkdir 명령을 입력하면 mkdir명령의 매뉴얼이 조회됩니다. 이 내용을 q11 파일에 저장하세요.</li>\n<li>IO redirection을 활용하여 q11 파일의 내용을 q12 파일로 복사하세요.</li>\n<li>문제풀이의 과정을 답안으로 제출하기 위해 최근 사용된 명령어를 확인할 수 있는 ‘history’ 명령을 활용하여 최근 사용된 100개 명령어를 ~/week1/answer/txt에 저장해주세요</li>\n</ol>\n<ul>\n<li>history | tail -n 100 > ~/week1/answer.txt</li>\n</ul>\n<hr>\n<h1 id=\"추가-논의\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80-%EB%85%BC%EC%9D%98\" aria-label=\"추가 논의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가 논의</h1>\n<hr>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h3>\n<ul>\n<li><a href=\"https://www.inflearn.com/course/%EC%83%9D%ED%99%9C%EC%BD%94%EB%94%A9-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B0%95%EC%A2%8C/\">https://www.inflearn.com/course/%EC%83%9D%ED%99%9C%EC%BD%94%EB%94%A9-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B0%95%EC%A2%8C/</a></li>\n</ul>","frontmatter":{"date":"June 28, 2023","title":"[리눅스 스터디] 1. 리눅스 기초 & IO redirecdtion","categories":"Linux","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/linux-w1/"}},"site":{"siteMetadata":{"siteUrl":"https://jjunyong.github.io","comments":{"utterances":{"repo":"jjunyong/jjunyong.github.io"}}}}},"pageContext":{"slug":"/vi/","nextSlug":"/error-prometheus/","prevSlug":"/linux-w1/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}