{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/aws-architect9/",
    "result": {"data":{"cur":{"id":"35dc9692-9cca-5dc0-ba68-e35686c73fe2","html":"<h2 id=\"aws애서의-컨테이너-실행\" style=\"position:relative;\"><a href=\"#aws%EC%95%A0%EC%84%9C%EC%9D%98-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%8B%A4%ED%96%89\" aria-label=\"aws애서의 컨테이너 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS애서의 컨테이너 실행</h2>\n<p>컨테이너 오케스트레이션</p>\n<ul>\n<li>EKS : AWS에서 지원하는 k8s 사용 툴</li>\n<li>ECS : AWS에서 개발한 오케스트레이션 툴</li>\n<li>ECR : AWS에서 개발한 고가용성 Container registry</li>\n<li>Fargate, EC2 : 컨테이너 호스팅\n<ul>\n<li>EC2의 유휴 리소스를 컨테이너가 다 활용하지 못하면 리소스 낭비이기 때문에 Fargate가 등장하게 되어 컨테이너를 서비리스하게 사용하게 되었음.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"k8s-아키텍처\" style=\"position:relative;\"><a href=\"#k8s-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\" aria-label=\"k8s 아키텍처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>K8S 아키텍처</h3>\n<p>[이미지]</p>\n<h3 id=\"amazon-eks\" style=\"position:relative;\"><a href=\"#amazon-eks\" aria-label=\"amazon eks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Amazon EKS</h3>\n<ul>\n<li>controlplane은 AWS가 관리해준다.</li>\n<li>워크로드는 Fargate를 활용하거나 EC2를 활용하여 워커노드를 구성한다.</li>\n<li><a href=\"https://www.eksworkshop.com/\">EKS workshop</a>을 통해서 EKS 실습해볼 수 있다.</li>\n</ul>","excerpt":"AWS애서의 컨테이너 실행 컨테이너 오케스트레이션 EKS : AWS에서 지원하는 k8s 사용 툴 ECS : AWS에서 개발한 오케스트레이션 툴 ECR : AWS에서 개발한 고가용성 Container registry Fargate, EC2 : 컨테이너 호스팅 EC2의 유휴 리소스를 컨테이너가 다 활용하지 못하면 리소스 낭비이기 때문에 Fargate가 등장하게 되어 컨테이너를 서비리스하게 사용하게 되었음. K8S 아키텍처 [이미지] Amazon EKS controlplane은 AWS가 관리해준다. 워크로드는 Fargate를 활용하거나 EC2를 활용하여 워커노드를 구성한다. EKS workshop을 통해서 EKS 실습해볼 수 있다.","frontmatter":{"date":"July 07, 2022","title":"[AWS architect] 9. 컨테이너","categories":"AWS","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/aws-architect9/"}},"next":{"id":"c2bc1c3c-cef1-526f-894f-a72018a30736","html":"<h2 id=\"aws-cloudwatch\" style=\"position:relative;\"><a href=\"#aws-cloudwatch\" aria-label=\"aws cloudwatch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS Cloudwatch</h2>\n<p>AWS의 모든 자원은 cloudwatch에 의해서 모니터링 된다.</p>\n<ul>\n<li>CloudWatch Logs</li>\n<li>AWS CloudTrail\n<ul>\n<li>AWS 인프라에서 계정활동을 로깅/모니터링 한다.</li>\n<li>CloudTrail 로그 예시</li>\n</ul>\n</li>\n<li>VPC 흐름 로그\n<ul>\n<li>[image]</li>\n<li>송/수신 되는 ip 트래픽에 대한 정보를 모두 수집하여 볼 수 있다.</li>\n<li>네트웍 트러블슈팅 시 사용됨</li>\n<li>Kinesis Firehose 활용 -> Datadog, splunk Elasticsearch 와 같은 SaaS 연동하기에 용이함</li>\n</ul>\n</li>\n<li>사용자 정의 로그\n<ul>\n<li>logback에서 수집한 로그를 CloudWatch agent를 설치하여 연동함으로써 Amazon CloudWatch Logs로 전송할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"cloudwatch-경보\" style=\"position:relative;\"><a href=\"#cloudwatch-%EA%B2%BD%EB%B3%B4\" aria-label=\"cloudwatch 경보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CloudWatch 경보</h3>\n<p>[417 image]</p>\n<h3 id=\"eventbridge\" style=\"position:relative;\"><a href=\"#eventbridge\" aria-label=\"eventbridge permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Eventbridge</h3>\n<h2 id=\"elb-elastic-load-balancing\" style=\"position:relative;\"><a href=\"#elb-elastic-load-balancing\" aria-label=\"elb elastic load balancing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ELB (elastic load balancing)</h2>\n<ul>\n<li>L4/L7 역할, round-robin이 디폴트. 상태확인 수행하여 문제 있을 시 그 쪽으로 안 보냄</li>\n<li>무조건 2개 이상의 AZ를 선택하게 되어 있음</li>\n</ul>\n<h3 id=\"elb-유형\" style=\"position:relative;\"><a href=\"#elb-%EC%9C%A0%ED%98%95\" aria-label=\"elb 유형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ELB 유형</h3>\n<ul>\n<li>Application Load balancer ( ALB )\n<ul>\n<li>L7에서 작동. 트래픽의 고급 로드 밸런싱 가능</li>\n<li>자동 scaling</li>\n</ul>\n</li>\n<li>Network load balancer ( NLB )\n<ul>\n<li>L4에서 작동. 고정 IP 지원하여 ALB를 사용할 때도 고정ip가 필요하다면 ALB 앞단에 NLB를 attach한다.</li>\n</ul>\n</li>\n<li>Gateway load balancer ( GLB )\n<ul>\n<li>L3에서 작동</li>\n<li>보안 떄문에 사용한다. IDS/IPS에 의해 client ip가 변경되는 문제를 방지 하기 위해 사용된다.\n<ul>\n<li>서버 입장에서는 IDS/IPS가 없는 것처럼 보이게 하기 위함이다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"elb-구성-요소\" style=\"position:relative;\"><a href=\"#elb-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C\" aria-label=\"elb 구성 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ELB 구성 요소</h3>\n<p>[이미지]</p>\n<h2 id=\"aws-autoscaling\" style=\"position:relative;\"><a href=\"#aws-autoscaling\" aria-label=\"aws autoscaling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS autoscaling</h2>\n<h3 id=\"auto-scaling-그룹\" style=\"position:relative;\"><a href=\"#auto-scaling-%EA%B7%B8%EB%A3%B9\" aria-label=\"auto scaling 그룹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Auto scaling 그룹</h3>\n<p>scaling기준은 CPU average 30% 등 admin이 설정할 수 있음</p>\n<ul>\n<li>auto scaling 구성 요소\n<ul>\n<li>시작 템플릿</li>\n<li>auto scaling 그룹\n<ul>\n<li>min, max, desired capacity</li>\n</ul>\n</li>\n<li>Auto scaling 정책</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"시작-템플릿\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91-%ED%85%9C%ED%94%8C%EB%A6%BF\" aria-label=\"시작 템플릿 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작 템플릿</h3>\n<p>instance 시작을 위해 필요한 파라미터를 설정해놓은 템플릿이다.</p>\n<p>auto scaling 호출</p>\n<ul>\n<li>일정(예정된 급격한 증가 케이스)</li>\n<li>CloudWatch 경보</li>\n<li>수동 크기 조정</li>\n<li>상태 확인</li>\n</ul>\n<p>기본적으로는 ‘동적’ 조정 방식을 사용하여 auto scaling 한다.</p>\n<ul>\n<li>aws가 ML통해 예측한 방식으로 적용하여 scaling 할 수도 있다.</li>\n</ul>","frontmatter":{"date":"July 06, 2022","title":"[AWS architect] 7. AWS Monitoring","categories":"AWS","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/aws-architect7/"}},"prev":{"id":"140fa5b0-4c7a-5df7-8612-b728f0c99b35","html":"<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<ul>\n<li>AWS 서비스에 대한 연결을 프라이빗 상태로 유지할 수 있는가</li>\n<li>VPC 간에 private 방식으로 트래픽을 라우팅하려면?</li>\n<li>온프레이미스 &#x3C;-> AWS 를 연결하려면</li>\n</ul>\n<h2 id=\"vpc-endpoint\" style=\"position:relative;\"><a href=\"#vpc-endpoint\" aria-label=\"vpc endpoint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VPC Endpoint</h2>\n<p>internet gateway 타지 않고 privateg하게 private subnet내에 있는 EC2 instance와 AWS 완전 관리형 서비스인 DynamoDB를 통신하게 할 수 있다.\nVPC Endpoint가 없다면 NAT를 타고 IGW를 타고 통신해야 한다.\nVPC 만들 때 Gateway endpoint와 Interface endpoint 하나 씩만 최초에 만들어주면 된다.</p>\n<ul>\n<li>\n<p>Gateway endpoint</p>\n<ul>\n<li>라우팅 테이블에 지정된 대상</li>\n<li>S3, Dynamo DB 서비스 지원</li>\n<li>추가 비용 없음</li>\n</ul>\n</li>\n<li>\n<p>Interface endpoint</p>\n<ul>\n<li>private IP의 ENI를 통해 서비스와 통신한다고 이해하면 됨</li>\n<li>추가 비용 존재</li>\n</ul>\n<p>VPC endpoint도 리소스이므로 리소스 기반 정책을 적용할 수 있다.\n[심층 방어 이미지]</p>\n</li>\n</ul>\n<h3 id=\"vpc-피어링\" style=\"position:relative;\"><a href=\"#vpc-%ED%94%BC%EC%96%B4%EB%A7%81\" aria-label=\"vpc 피어링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VPC 피어링</h3>\n<ul>\n<li>리전이 달라도 지원되며 다른 계정과도 지원됨</li>\n<li>그러나 VPC 간에 IP대역이 중복되면 안됨</li>\n<li>다중 피어링\n<ul>\n<li>Full mesh로 해야 연결이 된다. 즉, trasitive peering이 안된다.\n<ul>\n<li>\n<p>공유 서비스 VPC를 만들어 불편함을 극복했었음</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"on-premise-데이터-센터와-aws-간의-네트웍-연결\" style=\"position:relative;\"><a href=\"#on-premise-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%84%BC%ED%84%B0%EC%99%80-aws-%EA%B0%84%EC%9D%98-%EB%84%A4%ED%8A%B8%EC%9B%8D-%EC%97%B0%EA%B2%B0\" aria-label=\"on premise 데이터 센터와 aws 간의 네트웍 연결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>On-premise 데이터 센터와 AWS 간의 네트웍 연결</h3>\n<ul>\n<li>AWS site-to-site VPN</li>\n<li>AWS Direct connect\n<ul>\n<li>우리 회사는 이걸 쓰고 있음</li>\n</ul>\n</li>\n<li>Transit Gateway</li>\n</ul>\n<h3 id=\"transit-gateway\" style=\"position:relative;\"><a href=\"#transit-gateway\" aria-label=\"transit gateway permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transit Gateway</h3>","frontmatter":{"date":"July 08, 2022","title":"[AWS architect] 10. Networking2","categories":"AWS","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/aws-architect10/"}},"site":{"siteMetadata":{"siteUrl":"https://jjunyong.github.io","comments":{"utterances":{"repo":"jjunyong/jjunyong.github.io"}}}}},"pageContext":{"slug":"/aws-architect9/","nextSlug":"/aws-architect7/","prevSlug":"/aws-architect10/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}