{"componentChunkName":"component---src-templates-blog-template-js","path":"/aws-architect9/","result":{"data":{"cur":{"id":"35dc9692-9cca-5dc0-ba68-e35686c73fe2","html":"<h2 id=\"aws애서의-컨테이너-실행\" style=\"position:relative;\"><a href=\"#aws%EC%95%A0%EC%84%9C%EC%9D%98-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%8B%A4%ED%96%89\" aria-label=\"aws애서의 컨테이너 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS애서의 컨테이너 실행</h2>\n<p>컨테이너 오케스트레이션</p>\n<ul>\n<li>EKS : AWS에서 지원하는 k8s 사용 툴</li>\n<li>ECS : AWS에서 개발한 오케스트레이션 툴</li>\n<li>ECR : AWS에서 개발한 고가용성 Container registry</li>\n<li>Fargate, EC2 : 컨테이너 호스팅\n<ul>\n<li>EC2의 유휴 리소스를 컨테이너가 다 활용하지 못하면 리소스 낭비이기 때문에 Fargate가 등장하게 되어 컨테이너를 서비리스하게 사용하게 되었음.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"k8s-아키텍처\" style=\"position:relative;\"><a href=\"#k8s-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\" aria-label=\"k8s 아키텍처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>K8S 아키텍처</h3>\n<p>[이미지]</p>\n<h3 id=\"amazon-eks\" style=\"position:relative;\"><a href=\"#amazon-eks\" aria-label=\"amazon eks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Amazon EKS</h3>\n<ul>\n<li>controlplane은 AWS가 관리해준다.</li>\n<li>워크로드는 Fargate를 활용하거나 EC2를 활용하여 워커노드를 구성한다.</li>\n<li><a href=\"https://www.eksworkshop.com/\">EKS workshop</a>을 통해서 EKS 실습해볼 수 있다.</li>\n</ul>","excerpt":"AWS애서의 컨테이너 실행 컨테이너 오케스트레이션 EKS : AWS에서 지원하는 k8s 사용 툴 ECS : AWS에서 개발한 오케스트레이션 툴 ECR : AWS에서 개발한 고가용성 Container registry Fargate, EC2 : 컨테이너 호스팅 EC2의 유휴 리소스를 컨테이너가 다 활용하지 못하면 리소스 낭비이기 때문에 Fargate가 등장하게 되어 컨테이너를 서비리스하게 사용하게 되었음. K8S 아키텍처 [이미지] Amazon EKS controlplane은 AWS가 관리해준다. 워크로드는 Fargate를 활용하거나 EC2를 활용하여 워커노드를 구성한다. EKS workshop을 통해서 EKS 실습해볼 수 있다.","frontmatter":{"date":"July 07, 2022","title":"[AWS architect] 9. 컨테이너","categories":"AWS DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/aws-architect9/"}},"next":{"id":"37e29bbf-540b-5f6f-b57b-e28b7164de8e","html":"<h2 id=\"iac\" style=\"position:relative;\"><a href=\"#iac\" aria-label=\"iac permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IaC</h2>\n<p>IaC의 장점 : 재사용성과 업데이트</p>\n<h3 id=\"aws-cloudformation\" style=\"position:relative;\"><a href=\"#aws-cloudformation\" aria-label=\"aws cloudformation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS CloudFormation</h3>\n<p>CloudFormation > Stack > create Stack에서 IaC yaml파일을 등록하여 한 꺼번에 프로비저닝 할 수 있다.</p>\n<ul>\n<li>AWS 대부분의 리소스를 CloudFormation 템플릿으로 제어할 수 있다.</li>\n</ul>\n<h3 id=\"aws-elastic-beanstalk\" style=\"position:relative;\"><a href=\"#aws-elastic-beanstalk\" aria-label=\"aws elastic beanstalk permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS Elastic Beanstalk</h3>\n<p>웹 콘솔에서 클릭으로 할 수 있기 때문에 편의성 면에서 프로비저닝하기 더 좋다.</p>\n<h3 id=\"aws-cdkcloud-development-kit\" style=\"position:relative;\"><a href=\"#aws-cdkcloud-development-kit\" aria-label=\"aws cdkcloud development kit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS CDK(Cloud Development Kit)</h3>\n<p>python, typescript 등의 언어로 컴파일하여 CloudFormation template을 만들어준다.</p>\n<p>[보충 이미지]</p>\n<h3 id=\"aws-솔루션-라이브러리\" style=\"position:relative;\"><a href=\"#aws-%EC%86%94%EB%A3%A8%EC%85%98-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"aws 솔루션 라이브러리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS 솔루션 라이브러리</h3>\n<ul>\n<li>사전 구축된 참조 아키텍처이며 도메인 별로 활용될 수 있는 다양한 아키텍처를 확인할 수 있다.</li>\n<li>CloudFormation 파일을 제공하는 아키텍처들도 있다.</li>\n</ul>\n<h3 id=\"aws-systems-manager\" style=\"position:relative;\"><a href=\"#aws-systems-manager\" aria-label=\"aws systems manager permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS Systems Manager</h3>\n<hr>\n<h2 id=\"실습-3-aws-vpc-인프라에-데이터베이스-계층-생성\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-3-aws-vpc-%EC%9D%B8%ED%94%84%EB%9D%BC%EC%97%90-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EA%B3%84%EC%B8%B5-%EC%83%9D%EC%84%B1\" aria-label=\"실습 3 aws vpc 인프라에 데이터베이스 계층 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 3: AWS VPC 인프라에 데이터베이스 계층 생성</h2>\n<p>[실습 아키 이미지]</p>\n<ol>\n<li>RDS 생성</li>\n<li>Target group 생성</li>\n</ol>\n<hr>\n<p>eksworkshop.com</p>","frontmatter":{"date":"July 06, 2022","title":"[AWS architect] 8. AWS 자동화","categories":"AWS DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/aws-architect8/"}},"prev":{"id":"140fa5b0-4c7a-5df7-8612-b728f0c99b35","html":"<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<ul>\n<li>AWS 서비스에 대한 연결을 프라이빗 상태로 유지할 수 있는가</li>\n<li>VPC 간에 private 방식으로 트래픽을 라우팅하려면?</li>\n<li>온프레이미스 &#x3C;-> AWS 를 연결하려면</li>\n</ul>\n<h2 id=\"vpc-endpoint\" style=\"position:relative;\"><a href=\"#vpc-endpoint\" aria-label=\"vpc endpoint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VPC Endpoint</h2>\n<p>internet gateway 타지 않고 privateg하게 private subnet내에 있는 EC2 instance와 AWS 완전 관리형 서비스인 DynamoDB를 통신하게 할 수 있다.\nVPC Endpoint가 없다면 NAT를 타고 IGW를 타고 통신해야 한다.\nVPC 만들 때 Gateway endpoint와 Interface endpoint 하나 씩만 최초에 만들어주면 된다.</p>\n<ul>\n<li>\n<p>Gateway endpoint</p>\n<ul>\n<li>라우팅 테이블에 지정된 대상</li>\n<li>S3, Dynamo DB 서비스 지원</li>\n<li>추가 비용 없음</li>\n</ul>\n</li>\n<li>\n<p>Interface endpoint</p>\n<ul>\n<li>private IP의 ENI를 통해 서비스와 통신한다고 이해하면 됨</li>\n<li>추가 비용 존재</li>\n</ul>\n<p>VPC endpoint도 리소스이므로 리소스 기반 정책을 적용할 수 있다.\n[심층 방어 이미지]</p>\n</li>\n</ul>\n<h3 id=\"vpc-피어링\" style=\"position:relative;\"><a href=\"#vpc-%ED%94%BC%EC%96%B4%EB%A7%81\" aria-label=\"vpc 피어링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VPC 피어링</h3>\n<ul>\n<li>리전이 달라도 지원되며 다른 계정과도 지원됨</li>\n<li>그러나 VPC 간에 IP대역이 중복되면 안됨</li>\n<li>다중 피어링\n<ul>\n<li>Full mesh로 해야 연결이 된다. 즉, trasitive peering이 안된다.\n<ul>\n<li>\n<p>공유 서비스 VPC를 만들어 불편함을 극복했었음</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"on-premise-데이터-센터와-aws-간의-네트웍-연결\" style=\"position:relative;\"><a href=\"#on-premise-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%84%BC%ED%84%B0%EC%99%80-aws-%EA%B0%84%EC%9D%98-%EB%84%A4%ED%8A%B8%EC%9B%8D-%EC%97%B0%EA%B2%B0\" aria-label=\"on premise 데이터 센터와 aws 간의 네트웍 연결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>On-premise 데이터 센터와 AWS 간의 네트웍 연결</h3>\n<ul>\n<li>AWS site-to-site VPN</li>\n<li>AWS Direct connect\n<ul>\n<li>우리 회사는 이걸 쓰고 있음</li>\n</ul>\n</li>\n<li>Transit Gateway</li>\n</ul>\n<h3 id=\"transit-gateway\" style=\"position:relative;\"><a href=\"#transit-gateway\" aria-label=\"transit gateway permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transit Gateway</h3>","frontmatter":{"date":"July 08, 2022","title":"[AWS architect] 10. Networking2","categories":"AWS DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/aws-architect10/"}},"site":{"siteMetadata":{"siteUrl":"https://jjunyong.github.io","comments":{"utterances":{"repo":"jjunyong/jjunyong.github.io"}}}}},"pageContext":{"slug":"/aws-architect9/","nextSlug":"/aws-architect8/","prevSlug":"/aws-architect10/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}