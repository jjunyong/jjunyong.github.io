{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/on-premise5/",
    "result": {"data":{"cur":{"id":"5ddab0e0-9d57-5cdc-bf2f-23512b7453bb","html":"","excerpt":"","frontmatter":{"date":"July 02, 2023","title":"On-premise 서버 구축하기 5. 네트워크 설정","categories":"DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/on-premise5/"}},"next":{"id":"ca567892-1197-5142-89b7-611bdfc77df1","html":"<h2 id=\"istio-환경구성\" style=\"position:relative;\"><a href=\"#istio-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\" aria-label=\"istio 환경구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Istio 환경구성</h2>\n<h3 id=\"istio-설치\" style=\"position:relative;\"><a href=\"#istio-%EC%84%A4%EC%B9%98\" aria-label=\"istio 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Istio 설치</h3>\n<p>생각보다 istio 설치하는 것 자체는 간단하다. 아래와 같은 과정을 따라 하면 끝이다.</p>\n<ul>\n<li>\n<p>Istioctl 다운로드 : controlplane에서 다운로드 한다.</p>\n<p><code class=\"language-text\">curl -L https://istio.io/downloadIstio | sh -</code></p>\n</li>\n<li>\n<p>istioctl 명령어 사용하기 위한 PATH 등록</p>\n<p><code class=\"language-text\">cd istio-1.17.2</code></p>\n<p><code class=\"language-text\">export PATH=$PWD/bin:$PATH</code></p>\n</li>\n<li>\n<p>istio 설치 ( <a href=\"https://istio.io/latest/docs/setup/install/istioctl/\">https://istio.io/latest/docs/setup/install/istioctl/</a> )</p>\n<p><code class=\"language-text\">istioctl install</code></p>\n<ul>\n<li>default Profile으로 설치됨</li>\n<li>설치 후 deployment에 istiod, istio-ingressgateway설치되었음을 확인 가능</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"istio-proxy-배포하기\" style=\"position:relative;\"><a href=\"#istio-proxy-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\" aria-label=\"istio proxy 배포하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Istio proxy 배포하기</h3>\n<p>istio는 application pod에 sidecar로 istio-proxy 컨테이너를 배포함으써 istio-proxy 컨테이너가 pod에 대한 모든 트래픽을 중개하게 된다.\n이미 구성된 k8s 클러스터에서 istio-proxy 컨테이너를 inject하는 방법은 아래와 같다.</p>\n<h3 id=\"kube-inject\" style=\"position:relative;\"><a href=\"#kube-inject\" aria-label=\"kube inject permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kube-inject</h3>\n<p><code class=\"language-text\">istioctl kube-inject -f deployment-nginx.yaml | kubectl apply -f -</code>\n→ 이렇게 하면 nginx deployment에 해당하는 pod에 istio-proxy가 삽입된다.</p>\n<h3 id=\"auto-injection\" style=\"position:relative;\"><a href=\"#auto-injection\" aria-label=\"auto injection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Auto Injection</h3>\n<ul>\n<li>\n<p><strong>namespace label을 통한 자동 주입 방법</strong></p>\n<p>일반적으로 더 간편한 방법은 해당하는 namespace의 전체 pod에 istio-proxy를 주입하는 방법이다.</p>\n<p><code class=\"language-text\">kubectl label namespace default istio-injection=enabled --</code>\n: default namespace의 모든 Pod에 사이드카 주입</p>\n<ul>\n<li>사이드카 제거 명령 : <code class=\"language-text\">kubectl label namespace default istio-injection-</code></li>\n</ul>\n</li>\n<li>\n<p>k logs -c 옵션 통해 istio-proxy의 로그만 따로 볼 수도 있다.</p>\n<p><code class=\"language-text\">k logs nginx-deployment-xxxyyzz -c istio-proxy</code></p>\n</li>\n<li>\n<p>enable된 namespace 라도 injection을 원치않는 pod는 pod의 label을 아래와 같이 설정하면 istio-proxy 주입이 되지 않도록 disable설정 가능하다.</p>\n<p><code class=\"language-text\">sidecar.istio.io/inject: “false”</code></p>\n</li>\n</ul>\n<h3 id=\"metallb-설치\" style=\"position:relative;\"><a href=\"#metallb-%EC%84%A4%EC%B9%98\" aria-label=\"metallb 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MetalLB 설치</h3>\n<p>아래 공식 설치 url에서 ‘installation by manifest’ 부분을 수행한다.\n<a href=\"https://metallb.universe.tf/installation/#installation-by-manifest\">https://metallb.universe.tf/installation/#installation-by-manifest</a></p>\n<ul>\n<li>\n<p>kubemode를 ipvs로, strictARP를 true로 설정한다</p>\n</li>\n<li>\n<p><code class=\"language-text\">kubectl edit configmap -n kube-system kube-proxy</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\napiVersion: [kubeproxy.config.k8s.io/v1alpha1](http://kubeproxy.config.k8s.io/v1alpha1)\nkind: KubeProxyConfiguration\nmode: \"ipvs\"\nipvs:\n  strictARP: true</code></pre></div>\n</li>\n<li>\n<p>설치</p>\n<ul>\n<li><code class=\"language-text\">kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.10/config/manifests/metallb-native.yaml</code></li>\n</ul>\n</li>\n</ul>\n<p>위와 같이 하면 설치는 다 되게 되는데, 이 상태에서는 LoadBalancer type의 서비스인 istio-ingressgateway service의 EXTERNAL-IP가 아직 Pending상태일 것이다.\nMetablLB를 통해 해당 서비스에 ip를 할당해주려면 아래 설정 page를 참고하여 Layer2 Configuration으로 ipaddresspool과 l2advertisement를 설정해주면 된다.\nipaddresspool에서는 호스트 서버와 통신 가능한 대역을 겹치지 않도록 설정해주도록 하자.</p>\n<ul>\n<li><a href=\"https://metallb.universe.tf/configuration/#layer-2-configuration\">https://metallb.universe.tf/configuration/#layer-2-configuration</a></li>\n</ul>","frontmatter":{"date":"July 02, 2023","title":"On-premise 서버 구축하기 4. Istio 환경 구축하기","categories":"DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/on-premise4/"}},"prev":{"id":"bc4fa07b-cdf1-5248-be3c-52af000a21a4","html":"<h2 id=\"mysql-80-설치\" style=\"position:relative;\"><a href=\"#mysql-80-%EC%84%A4%EC%B9%98\" aria-label=\"mysql 80 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MySQL 8.0 설치</h2>\n<ol>\n<li>설치가능한 MySQL repository 확인</li>\n</ol>\n<p><a href=\"http://www.mysql.com/products/community/\">www.mysql.com/products/community/</a></p>\n<ol start=\"2\">\n<li>MySQL Repository 설치</li>\n</ol>\n<p>1에서 확인한 yum, CentOS 7버전에 해당하는 repository 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</code></pre></div>\n<ol start=\"3\">\n<li>MySQL 설치</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> -y mysql-server\n\n<span class=\"token comment\"># mysql version 확인</span>\nmysqld -V</code></pre></div>\n<ol start=\"4\">\n<li>MySQL 서버 시작</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> mysqld <span class=\"token operator\">&amp;&amp;</span> systemctl start mysqld <span class=\"token operator\">&amp;&amp;</span> systemctl status mysqld</code></pre></div>\n<ul>\n<li>\n<p>아래 명령을 통해 설치된 mysql서버의 root 계정 비밀번호를 알아 낼 수 있음</p>\n<ul>\n<li><code class=\"language-text\">grep 'temporary password' /var/log/mysqld.log</code></li>\n</ul>\n</li>\n<li>\n<p>아래 명령을 통해 mysql에 root로 접속</p>\n<ul>\n<li><code class=\"language-text\">mysql -u root -p</code></li>\n</ul>\n</li>\n</ul>\n<ol start=\"5\">\n<li>DB구성 및 데이터 마이그레이션</li>\n</ol>\n<p>내 로컬 환경인 Mac에서 mysqldump 명령을 사용하기 위해 아래 명령어로 mysql-client를 다운 받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> mysql-client</code></pre></div>","frontmatter":{"date":"July 02, 2023","title":"On-premise 서버 구축하기 6. DB 서버 구축하기","categories":"DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/on-premise6/"}},"site":{"siteMetadata":{"siteUrl":"https://jjunyong.github.io","comments":{"utterances":{"repo":"jjunyong/jjunyong.github.io"}}}}},"pageContext":{"slug":"/on-premise5/","nextSlug":"/on-premise4/","prevSlug":"/on-premise6/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}