{"componentChunkName":"component---src-templates-blog-template-js","path":"/on-premise5/","result":{"data":{"cur":{"id":"5ddab0e0-9d57-5cdc-bf2f-23512b7453bb","html":"<h2 id=\"ssl-설정\" style=\"position:relative;\"><a href=\"#ssl-%EC%84%A4%EC%A0%95\" aria-label=\"ssl 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL 설정</h2>\n<hr>\n<h2 id=\"k8s-네트워크-관련-에러\" style=\"position:relative;\"><a href=\"#k8s-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B4%80%EB%A0%A8-%EC%97%90%EB%9F%AC\" aria-label=\"k8s 네트워크 관련 에러 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>K8S 네트워크 관련 에러</h2>\n<h3 id=\"cni-재설치\" style=\"position:relative;\"><a href=\"#cni-%EC%9E%AC%EC%84%A4%EC%B9%98\" aria-label=\"cni 재설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CNI 재설치</h3>\n<h3 id=\"calico\" style=\"position:relative;\"><a href=\"#calico\" aria-label=\"calico permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calico</h3>\n<h4 id=\"calico-제거\" style=\"position:relative;\"><a href=\"#calico-%EC%A0%9C%EA%B1%B0\" aria-label=\"calico 제거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calico 제거</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl delete -f https://docs.projectcalico.org/manifests/calico.yaml</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">rm -rf /var/run/calico/\nrm -rf /var/lib/calico/\nrm -rf /etc/cni/net.d/\nrm -rf /var/lib/cni/</code></pre></div>\n<h4 id=\"calico-설치\" style=\"position:relative;\"><a href=\"#calico-%EC%84%A4%EC%B9%98\" aria-label=\"calico 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calico 설치</h4>\n<p>On-premise2 k8s 구성 참조</p>\n<h3 id=\"flannel\" style=\"position:relative;\"><a href=\"#flannel\" aria-label=\"flannel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flannel</h3>\n<h4 id=\"flannel-설치\" style=\"position:relative;\"><a href=\"#flannel-%EC%84%A4%EC%B9%98\" aria-label=\"flannel 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flannel 설치</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml</code></pre></div>\n<p>pod-cidr 설정을 k8s cluster와 맞춰주도록 하자.</p>\n<h4 id=\"flannel-제거\" style=\"position:relative;\"><a href=\"#flannel-%EC%A0%9C%EA%B1%B0\" aria-label=\"flannel 제거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flannel 제거</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## flannel 삭제\nkubectl delete -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml\nkubeadm reset\n\nsystemctl stop kubelet\nsystemctl stop docker\n\nrm -rf /var/lib/cni/\nrm -rf /etc/cni/\nrm -rf /run/flannel\n\n## kube 설정 파일 삭제 ##\nrm -rf $HOME/.kube\n\n## 네트워크 설정 삭제 ##\nifconfig cni0 down\nip link delete cni0\nip link delete flannel.1\n\nsystemctl start docker\n\n# 서버 reboot</code></pre></div>\n<hr>\n<h2 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h2>\n<ul>\n<li><a href=\"https://lcc3108.github.io/articles/2020-12/certmanager\">https://lcc3108.github.io/articles/2020-12/certmanager</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=BlzRx6ROiX0\">https://www.youtube.com/watch?v=BlzRx6ROiX0</a></li>\n</ul>","excerpt":"SSL 설정 K8S 네트워크 관련 에러 CNI 재설치 Calico Calico 제거 Calico 설치 On-premise2 k8s 구성 참조 Flannel Flannel 설치 pod-cidr 설정을 k8s cluster와 맞춰주도록 하자. Flannel 제거 참고자료 https://lcc3108.github.io/articles/2020-12/certmanager https://www.youtube.com/watch?v=BlzRx6ROiX0","frontmatter":{"date":"July 02, 2023","title":"On-premise 5. 네트워크 설정","categories":"DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/on-premise5/"}},"next":{"id":"ca567892-1197-5142-89b7-611bdfc77df1","html":"<h2 id=\"istio-환경구성\" style=\"position:relative;\"><a href=\"#istio-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\" aria-label=\"istio 환경구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Istio 환경구성</h2>\n<h3 id=\"istio-설치\" style=\"position:relative;\"><a href=\"#istio-%EC%84%A4%EC%B9%98\" aria-label=\"istio 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Istio 설치</h3>\n<p>생각보다 istio 설치하는 것 자체는 간단하다. 아래와 같은 과정을 따라 하면 끝이다.</p>\n<ul>\n<li>\n<p>Istioctl 다운로드 : controlplane에서 다운로드 한다.</p>\n<p><code class=\"language-text\">curl -L https://istio.io/downloadIstio | sh -</code></p>\n</li>\n<li>\n<p>istioctl 명령어 사용하기 위한 PATH 등록</p>\n<p><code class=\"language-text\">cd istio-1.17.2</code></p>\n<p><code class=\"language-text\">export PATH=$PWD/bin:$PATH</code></p>\n</li>\n<li>\n<p>istio 설치 ( <a href=\"https://istio.io/latest/docs/setup/install/istioctl/\">https://istio.io/latest/docs/setup/install/istioctl/</a> )</p>\n<ul>\n<li>\n<p>istioctl로 바로 설치하기</p>\n<p><code class=\"language-text\">istioctl install</code></p>\n<ul>\n<li>default Profile으로 설치됨</li>\n<li>설치 후 deployment에 istiod, istio-ingressgateway설치되었음을 확인 가능</li>\n</ul>\n</li>\n<li>\n<p>istio-operator로 설치하기</p>\n<ul>\n<li><code class=\"language-text\">istioctl operator init</code> : 이렇게 하면 istio-operator namespace와 함께 istio-operator pod가 생성된다.</li>\n<li>그런 후 k apply -f 를 해서 아래 istio-operator 파일을 apply 해주면 istiod, istio-ingressgateway, egressgateway 등 istio가 설치된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> install.istio.io/v1alpha1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> IstioOperator\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> istio<span class=\"token punctuation\">-</span>system\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">-</span>istiocontrolplane\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n<span class=\"token key atrule\">profile</span><span class=\"token punctuation\">:</span> demo</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"istio-설치-중-ingress-egress-pod설치-안되던-error\" style=\"position:relative;\"><a href=\"#istio-%EC%84%A4%EC%B9%98-%EC%A4%91-ingress-egress-pod%EC%84%A4%EC%B9%98-%EC%95%88%EB%90%98%EB%8D%98-error\" aria-label=\"istio 설치 중 ingress egress pod설치 안되던 error permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>istio 설치 중 ingress, egress pod설치 안되던 error</h3>\n<p>istio를 설치하면 ingress/egress pod가 istio-system namespace에서 1/1 running 상태가 되어야 하는데, 0/1 running으로 계속 나와서 확인해보니 아래와 같은 로그가 반복되고 있었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">warning envoy config external/envoy/source/common/config/grpc_stream.h:153 StreamSecrets gRPC config stream to sds-grpc closed: 2, failed to generate secret for default: failed to generate workload certificate: create certificate: rpc error: code = Unavailable desc = connection error: desc = \"transport: Error while dialing: dial tcp: lookup istiod.istio-system.svc on 10.96.0.10:53: read udp 172.16.189.76:32810->10.96.0.10:53: i/o timeout\"  thread=12</code></pre></div>\n<p>내용을 보면 istiod와 ingressgateway를 뭔가 연결해주지 못하는 문제로 생각되었다. ‘lookup istiod.istio-system.svc on 10.96.0.10:53’ timeout이 나고 있었기 때문에.\n이것저것 구글링 해보다보니 결국 coredns와 연관됐다는 판단을 하고, coredns service의 cluster_ip를 직접 명시해주도록 Corefile을 수정했다. Corefile은 configmap 수정을 통해서만 반영된다.</p>\n<ul>\n<li>변경 전 Corefile\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">.:53 <span class=\"token punctuation\">{</span>\n    errors\n    health <span class=\"token punctuation\">{</span>\n      lameduck 5s\n    <span class=\"token punctuation\">}</span>\n    ready\n    kubernetes cluster.local in-addr.arpa ip6.arpa <span class=\"token punctuation\">{</span>\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n      ttl <span class=\"token number\">30</span>\n    <span class=\"token punctuation\">}</span>\n    prometheus :9153\n    forward <span class=\"token builtin class-name\">.</span> /etc/resolv.conf <span class=\"token punctuation\">{</span>\n      max_concurrent <span class=\"token number\">1000</span>\n    <span class=\"token punctuation\">}</span>\n    cache <span class=\"token number\">30</span>\n    loop\n    reload\n    loadbalance\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>변경 후 Corefile\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">.:53 <span class=\"token punctuation\">{</span>\n    errors\n    health <span class=\"token punctuation\">{</span>\n      lameduck 5s\n    <span class=\"token punctuation\">}</span>\n    ready\n    kubernetes cluster.local in-addr.arpa ip6.arpa <span class=\"token punctuation\">{</span>\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n      ttl <span class=\"token number\">30</span>\n    <span class=\"token punctuation\">}</span>\n    prometheus :9153\n    forward <span class=\"token builtin class-name\">.</span> <span class=\"token number\">10.96</span>.0.10 <span class=\"token punctuation\">{</span>\n      max_concurrent <span class=\"token number\">1000</span>\n    <span class=\"token punctuation\">}</span>\n    cache <span class=\"token number\">30</span>\n    loop\n    reload\n    loadbalance\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 기존의 CoreDns configmap 저장</span>\nkubectl <span class=\"token parameter variable\">-n</span> kube-system get configmap coredns <span class=\"token parameter variable\">-o</span> yaml <span class=\"token operator\">></span> coredns-configmap.yaml \n<span class=\"token comment\"># 위와 같이 변경전 -> 후의 내용차이를 반영하기 </span>\n<span class=\"token function\">vi</span> coredns-configmap.yaml \n<span class=\"token comment\"># Configmap 업데이트 </span>\nkubectl replace <span class=\"token parameter variable\">-f</span> coredns-configmap.yaml \n<span class=\"token comment\"># CoreDNS pod 재시작</span>\nkubectl <span class=\"token parameter variable\">-n</span> kube-system delete pod <span class=\"token parameter variable\">-l</span> k8s-app<span class=\"token operator\">=</span>kube-dns </code></pre></div>\n<p>이렇게 하고 확인해보니 istio-ingressgateway/egressgateway가 정상적으로 ‘1/1 running’ 상태로 설치된 것을 확인할 수 있었다.</p>\n<hr>\n<h3 id=\"istio-proxy-배포하기\" style=\"position:relative;\"><a href=\"#istio-proxy-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\" aria-label=\"istio proxy 배포하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Istio proxy 배포하기</h3>\n<p>istio는 application pod에 sidecar로 istio-proxy 컨테이너를 배포함으써 istio-proxy 컨테이너가 pod에 대한 모든 트래픽을 중개하게 된다.\n이미 구성된 k8s 클러스터에서 istio-proxy 컨테이너를 inject하는 방법은 아래와 같다.</p>\n<h3 id=\"kube-inject\" style=\"position:relative;\"><a href=\"#kube-inject\" aria-label=\"kube inject permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kube-inject</h3>\n<p><code class=\"language-text\">istioctl kube-inject -f deployment-nginx.yaml | kubectl apply -f -</code>\n→ 이렇게 하면 nginx deployment에 해당하는 pod에 istio-proxy가 삽입된다.</p>\n<h3 id=\"auto-injection\" style=\"position:relative;\"><a href=\"#auto-injection\" aria-label=\"auto injection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Auto Injection</h3>\n<ul>\n<li>\n<p><strong>namespace label을 통한 자동 주입 방법</strong></p>\n<p>일반적으로 더 간편한 방법은 해당하는 namespace의 전체 pod에 istio-proxy를 주입하는 방법이다.</p>\n<p><code class=\"language-text\">kubectl label namespace default istio-injection=enabled --</code>\n: default namespace의 모든 Pod에 사이드카 주입</p>\n<ul>\n<li>사이드카 제거 명령 : <code class=\"language-text\">kubectl label namespace default istio-injection-</code></li>\n</ul>\n</li>\n<li>\n<p>k logs -c 옵션 통해 istio-proxy의 로그만 따로 볼 수도 있다.</p>\n<p><code class=\"language-text\">k logs nginx-deployment-xxxyyzz -c istio-proxy</code></p>\n</li>\n<li>\n<p>enable된 namespace 라도 injection을 원치않는 pod는 pod의 label을 아래와 같이 설정하면 istio-proxy 주입이 되지 않도록 disable설정 가능하다.</p>\n<p><code class=\"language-text\">sidecar.istio.io/inject: “false”</code></p>\n</li>\n</ul>\n<h3 id=\"metallb-설치\" style=\"position:relative;\"><a href=\"#metallb-%EC%84%A4%EC%B9%98\" aria-label=\"metallb 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MetalLB 설치</h3>\n<p>아래 공식 설치 url에서 ‘installation by manifest’ 부분을 수행한다.\n<a href=\"https://metallb.universe.tf/installation/#installation-by-manifest\">https://metallb.universe.tf/installation/#installation-by-manifest</a></p>\n<ul>\n<li>\n<p>kubemode를 ipvs로, strictARP를 true로 설정한다</p>\n</li>\n<li>\n<p><code class=\"language-text\">kubectl edit configmap -n kube-system kube-proxy</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\napiVersion: [kubeproxy.config.k8s.io/v1alpha1](http://kubeproxy.config.k8s.io/v1alpha1)\nkind: KubeProxyConfiguration\nmode: \"ipvs\"\nipvs:\n  strictARP: true</code></pre></div>\n</li>\n<li>\n<p>설치</p>\n<ul>\n<li><code class=\"language-text\">kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.10/config/manifests/metallb-native.yaml</code></li>\n</ul>\n</li>\n</ul>\n<p>위와 같이 하면 설치는 다 되게 되는데, 이 상태에서는 LoadBalancer type의 서비스인 istio-ingressgateway service의 EXTERNAL-IP가 아직 Pending상태일 것이다.\nMetablLB를 통해 해당 서비스에 ip를 할당해주려면 아래 설정 page를 참고하여 Layer2 Configuration으로 ipaddresspool과 l2advertisement를 설정해주면 된다.\nipaddresspool에서는 호스트 서버와 통신 가능한 대역을 겹치지 않도록 설정해주도록 하자.</p>\n<ul>\n<li><a href=\"https://metallb.universe.tf/configuration/#layer-2-configuration\">https://metallb.universe.tf/configuration/#layer-2-configuration</a></li>\n</ul>\n<h3 id=\"istio-트래픽-라우팅-설정\" style=\"position:relative;\"><a href=\"#istio-%ED%8A%B8%EB%9E%98%ED%94%BD-%EB%9D%BC%EC%9A%B0%ED%8C%85-%EC%84%A4%EC%A0%95\" aria-label=\"istio 트래픽 라우팅 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Istio 트래픽 라우팅 설정</h3>\n<p>외부에서 istio 기반 k8s 클러스터로 pod로 요청이 왔을 때, 트래픽의 순서는 다음과 같다.</p>\n<ol>\n<li>외부 -> LoadBlancer Type의 istio-ingressgateway service</li>\n<li>istio-gw service -> istio-ingressgateway pod</li>\n</ol>\n<ul>\n<li>여기서 Gateway, VirtualService 리소스와 바인딩 된다.</li>\n</ul>\n<ol start=\"3\">\n<li>istio-gw pod -> application service</li>\n</ol>\n<ul>\n<li>VirtualService의 설정을 통해 istio-gw pod가 트래픽을 application의 service로 보내게 된다.</li>\n</ul>\n<p>따라서 만약에 ‘7777’ 이라는 istio 디폴트 설정에는 없는 특정 port를 통해 applicaiton을 서비스하고 싶다면 몇 가지를 추가 설정해주어야 한다.</p>\n<h4 id=\"istio-ingressgateway-service에-port-추가\" style=\"position:relative;\"><a href=\"#istio-ingressgateway-service%EC%97%90-port-%EC%B6%94%EA%B0%80\" aria-label=\"istio ingressgateway service에 port 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>istio-ingressgateway service에 Port 추가</h4>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7777</span>\n  <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7777</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> custom<span class=\"token punctuation\">-</span>port\n  <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP</code></pre></div>\n<h4 id=\"gateway에서-해당-port-listen하도록-추가\" style=\"position:relative;\"><a href=\"#gateway%EC%97%90%EC%84%9C-%ED%95%B4%EB%8B%B9-port-listen%ED%95%98%EB%8F%84%EB%A1%9D-%EC%B6%94%EA%B0%80\" aria-label=\"gateway에서 해당 port listen하도록 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gateway에서 해당 port Listen하도록 추가</h4>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.istio.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Gateway\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>gateway\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">istio</span><span class=\"token punctuation\">:</span> ingressgateway\n  <span class=\"token key atrule\">servers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">number</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7777</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n        <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> HTTP\n      <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">'*'</span>\n      <span class=\"token punctuation\">...</span></code></pre></div>\n<ul>\n<li>Gateway에 이렇게 port를 추가하면 ingressgateway에 7777 port에 대한 listener가 추가된다.\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ istioctl proxy-config listener istio-ingressgateway-9f6bc6bd7-szd5k <span class=\"token parameter variable\">-n</span> istio-system\n  ADDRESS PORT  MATCH DESTINATION\n  <span class=\"token number\">0.0</span>.0.0 <span class=\"token number\">7777</span>  ALL   Route: http.7777</code></pre></div>\n</li>\n</ul>\n<h4 id=\"마지막으로-virtualservice-설정-추가\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%A7%80%EB%A7%89%EC%9C%BC%EB%A1%9C-virtualservice-%EC%84%A4%EC%A0%95-%EC%B6%94%EA%B0%80\" aria-label=\"마지막으로 virtualservice 설정 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마지막으로 VirtualService 설정 추가</h4>\n<p>마지막으로 virtualservice에서도 routing 설정을 하여 application service로 트래픽이 연결될 수 있도록 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"> <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">match</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7777</span>\n    <span class=\"token key atrule\">route</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">destination</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> custom<span class=\"token punctuation\">-</span>service.<span class=\"token punctuation\">{</span>namespace<span class=\"token punctuation\">}</span>.svc.cluster.local\n        <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">number</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>application service's port<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h2>\n<ul>\n<li><a href=\"https://istio.io\">https://istio.io</a></li>\n<li><a href=\"https://learncloudnative.com/blog/2022-08-01-istio-gateway\">https://learncloudnative.com/blog/2022-08-01-istio-gateway</a></li>\n</ul>","frontmatter":{"date":"July 02, 2023","title":"On-premise 4. Istio 환경 구축하기","categories":"DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/on-premise4/"}},"prev":{"id":"0c2b0a8f-e1ce-5168-9bb0-52991a15f6a9","html":"<h2 id=\"무작위-접속-시도-차단을-위한-ipban-적용\" style=\"position:relative;\"><a href=\"#%EB%AC%B4%EC%9E%91%EC%9C%84-%EC%A0%91%EC%86%8D-%EC%8B%9C%EB%8F%84-%EC%B0%A8%EB%8B%A8%EC%9D%84-%EC%9C%84%ED%95%9C-ipban-%EC%A0%81%EC%9A%A9\" aria-label=\"무작위 접속 시도 차단을 위한 ipban 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>무작위 접속 시도 차단을 위한 ipban 적용</h2>\n<p>github에서 <a href=\"https://github.com/DigitalRuby/IPBan/releases\">https://github.com/DigitalRuby/IPBan/releases</a> url로 ipban을 다운로드 한다.</p>\n<ul>\n<li>\n<p>로그인/로그오프 기록을 로깅하여 ‘이벤트뷰어’-’보안’ 에서 확인하도록 하기</p>\n<p><code class=\"language-text\">auditpol.exe /set /category:\"{69979850-797A-11D9-BED3-505054503030}\" /success:enable /failure:enable</code></p>\n</li>\n<li>\n<p>서비스등록</p>\n<p><code class=\"language-text\">sc.exe create IPBAN type= own start= delayed-auto binPath= C:\\IPBan\\DigitalRuby.IPBan.exe DisplayName= IPBAN</code></p>\n<p><code class=\"language-text\">sc.exe description IPBAN \"Automatically builds firewall rules for abusive login attempts:https://github.com/DigitalRuby/IPBan\"</code></p>\n<p><code class=\"language-text\">sc.exe failure IPBAN reset= 9999 actions= \"restart/60000/restart/60000/restart/60000\"</code></p>\n<p><code class=\"language-text\">sc.exe start IPBAN</code></p>\n</li>\n<li>\n<p>ipban.config 수정 후 서비스 재기동하기</p>\n<ul>\n<li>로그인 5회 실패시 등록</li>\n</ul>\n  <add key=\"FailedLoginAttemptsBeforeBan\" value=\"5\"/>\n  - ipban 시간 15일로 수정\n  <add key=\"BanTime\" value=\"15:00:00:00\"/>\n  - 차단후 제거 기준일 15일로 수정\n  <add key=\"ExpireTime\" value=\"15:00:00:00\"/>\n</li>\n</ul>\n<h2 id=\"이벤트-뷰어-보는-법\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%B7%B0%EC%96%B4-%EB%B3%B4%EB%8A%94-%EB%B2%95\" aria-label=\"이벤트 뷰어 보는 법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 뷰어 보는 법</h2>\n<p>[실행창] - “eventvwr” 입력하면 된다.\n생각보다 호스트 서버에 무작위로 접속 시도하는 경우가 많아서 윈도우 서버의 경우 이벤트 뷰어에 들어가서 누가 언제 호스트 서버에 접속했는지 확인할 수 있다.\n접속 시도와 관련된 이벤트 id 및 로그온 유형은 다음과 같다.</p>\n<ul>\n<li>\n<p>Event ID</p>\n<ul>\n<li>4624\n<ul>\n<li>성공적인 로그인을 뜻한다. 따라서 관리자가 접속한 시간이 아닌 경우에 4624가 발생했다면 외부 공격을 의심해야 한다.</li>\n</ul>\n</li>\n<li>4625\n<ul>\n<li>계정 로그온 실패로 분류되며, 나의 경우에는 이벤트 뷰어에서 4624 이벤트가 초 단위로 쌓였었다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>로그온 유형</p>\n<ul>\n<li>로컬 로그온 (Logon Type 2): 사용자가 직접 컴퓨터의 키보드 또는 마우스를 사용하여 로그인하는 경우이다.</li>\n<li>원격 데스크톱 로그온 (Logon Type 10): 원격 데스크톱 연결(RDP)를 통해 원격으로 로그인하는 경우이다.</li>\n<li>네트워크 로그온 (Logon Type 3): 파일 공유 등의 네트워크 리소스에 접근하기 위해 로그인하는 경우이다. 예를 들어, 파일 공유에 접근하거나 인터넷 공유 서비스를 사용하는 경우가 이에 해당한다.</li>\n<li>서비스 로그온 (Logon Type 5): 시스템 서비스가 실행되기 위해 로그인하는 경우이다. 일부 백그라운드 서비스나 시스템 프로세스가 로그인하여 작동하는 경우가 이에 해당한다.</li>\n<li>일정 작업 로그온 (Logon Type 7): 예약된 작업이 실행되기 위해 로그인하는 경우이다. 일정에 따라 백그라운드 작업이 실행되도록 예약한 경우가 이에 해당한다.</li>\n</ul>\n<p>type3과 type10이 외부에서의 공격이 있을 때 빈번하게 나타난다고 한다.</p>\n</li>\n</ul>","frontmatter":{"date":"July 02, 2023","title":"On-premise 서버 구축하기 3. 호스트 서버 보안","categories":"DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/on-premise3/"}},"site":{"siteMetadata":{"siteUrl":"https://jjunyong.github.io","comments":{"utterances":{"repo":"jjunyong/jjunyong.github.io"}}}}},"pageContext":{"slug":"/on-premise5/","nextSlug":"/on-premise4/","prevSlug":"/on-premise3/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}