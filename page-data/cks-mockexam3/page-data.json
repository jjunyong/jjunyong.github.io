{"componentChunkName":"component---src-templates-blog-template-js","path":"/cks-mockexam3/","result":{"data":{"cur":{"id":"688a6e9e-c657-59c1-adb1-6b621cc96618","html":"<h2 id=\"exam-2\" style=\"position:relative;\"><a href=\"#exam-2\" aria-label=\"exam 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EXAM 2</h2>\n<h3 id=\"q1\" style=\"position:relative;\"><a href=\"#q1\" aria-label=\"q1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q1</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">A kube-bench report is available at the Kube-bench assessment report tab. Fix the tests with FAIL status for 4 Worker Node Security Configuration .\nMake changes to the /var/lib/kubelet/config.yaml\n\nAfter you have fixed the issues, you can update the published report in the Kube-bench assessment report tab by running /root/publish_kubebench.sh to validate results.</code></pre></div>\n<h3 id=\"q1-answer\" style=\"position:relative;\"><a href=\"#q1-answer\" aria-label=\"q1 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q1 Answer</h3>\n<p><code class=\"language-text\">/var/lib/kubelet/config.yaml</code>에서 아래 2가지 사항 조치</p>\n<ul>\n<li>수정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">authorization</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> Webhook</code></pre></div>\n<ul>\n<li>추가</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">protectKernelDefaults</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div>\n<h3 id=\"q2\" style=\"position:relative;\"><a href=\"#q2\" aria-label=\"q2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q2</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Enable auditing in this kubernetes cluster. Create a new policy file that will only log events based on the below specifications:\n\nNamespace: prod\nLevel: metadata\nOperations: delete\nResources: secrets\nLog Path: /var/log/prod-secrets.log\nAudit file location: /etc/kubernetes/prod-audit.yaml\n\nMaximum days to keep the logs: 30\nOnce the policy is created it, enable and make sure that it works.</code></pre></div>\n<h3 id=\"q2-answer\" style=\"position:relative;\"><a href=\"#q2-answer\" aria-label=\"q2 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q2 Answer</h3>\n<ul>\n<li>/etc/kubernetes/prod-audit.yaml 작성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> audit.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Policy\n<span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> Metadata\n  <span class=\"token key atrule\">namespaces</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"prod\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"delete\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"secrets\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>kube-apiserver 설정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> - --audit-policy-file=/etc/kubernetes/prod-audit.yaml\n - --audit-log-path=/var/log/prod-secrets.log\n - --audit-log-maxage=30</code></pre></div>\n<ul>\n<li>kube-apiserver volume / volumeMounts 설정</li>\n</ul>\n<h4 id=\"volumes\" style=\"position:relative;\"><a href=\"#volumes\" aria-label=\"volumes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>volumes</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- name: audit\n  hostPath:\n    path: /etc/kubernetes/prod-audit.yaml\n    type: File\n- name: audit-log\n  hostPath:\n    path: /var/log/prod-secrets.log\n    type: FileOrCreate</code></pre></div>\n<h4 id=\"volumemounts\" style=\"position:relative;\"><a href=\"#volumemounts\" aria-label=\"volumemounts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>volumeMounts</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- mountPath: /etc/kubernetes/prod-audit.yaml\n  name: audit\n  readOnly: true\n- mountPath: /var/log/prod-secrets.log\n  name: audit-log\n  readOnly: false</code></pre></div>\n<h3 id=\"q3--kubesec문제로-pass\" style=\"position:relative;\"><a href=\"#q3--kubesec%EB%AC%B8%EC%A0%9C%EB%A1%9C-pass\" aria-label=\"q3  kubesec문제로 pass permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q3 : kubesec문제로 Pass~</h3>\n<h3 id=\"q4\" style=\"position:relative;\"><a href=\"#q4\" aria-label=\"q4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q4</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">In the dev namespace create below resources:\n- A role dev-write with access to get, watch, list and create pods in the same namespace.\n- A Service account called developer and then bind dev-write role to it with a rolebinding called dev-write-binding.\n- Finally, create a pod using the template /root/dev-pod.yaml. The pod should run with the service account developer. Update /root/dev-pod.yaml as necessary</code></pre></div>\n<h3 id=\"q4-answer\" style=\"position:relative;\"><a href=\"#q4-answer\" aria-label=\"q4 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q4 Answer</h3>\n<ul>\n<li>dev-write role 추가</li>\n<li>developer sa 추가\n<ul>\n<li>kubectl create sa developer -n dev</li>\n</ul>\n</li>\n<li>dev-write-binding rolebinding 추가</li>\n<li><code class=\"language-text\">/root/dev-pod.yaml</code>에서 serviceAccount developer로 수정</li>\n</ul>\n<h3 id=\"q5-opa--중요\" style=\"position:relative;\"><a href=\"#q5-opa--%EC%A4%91%EC%9A%94\" aria-label=\"q5 opa  중요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q5 (OPA) / 중요!</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Try to create a pod using the template defined in /root/beta-pod.yaml in the namespace beta. This should result in a failure.\nTroubleshoot and fix the OPA validation issue while creating the pod. You can update /root/beta-pod.yaml as necessary.\n\nThe Rego configuration map for OPA is in untrusted-registry under opa namespace.\n\nNOTE: In the end pod need not to be successfully running but make sure that it passed the OPA validation and gets created.</code></pre></div>\n<h3 id=\"q5-answer\" style=\"position:relative;\"><a href=\"#q5-answer\" aria-label=\"q5 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q5 Answer</h3>\n<ul>\n<li><code class=\"language-text\">untrusted-registry</code> configmap에 정의된 rego file을 살펴보면 <code class=\"language-text\">kodekloud.io/</code> 로 시작하지 않는 repository를 거부하는 설정을 가지고 있다.</li>\n<li>따라서 이미지 url을 아래와 같이 고친 후에 pod를 기동해주면 된다.\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  - image: kodekloud.io/google-samples/node-hello:1.0</code></pre></div>\n</li>\n</ul>\n<h3 id=\"q6\" style=\"position:relative;\"><a href=\"#q6\" aria-label=\"q6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q6</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">We want to deploy an ImagePolicyWebhook admission controller to secure the deployments in our cluster.\n\n- Fix the error in /etc/kubernetes/pki/admission_configuration.yaml which will be used by ImagePolicyWebhook\n- Make sure that the policy is set to implicit deny. If the webhook service is not reachable, the configuration file should automatically reject all the images.\n- Enable the plugin on API server.\n\nThe kubeconfig file for already created imagepolicywebhook resources is under /etc/kubernetes/pki/admission_kube_config.yaml</code></pre></div>\n<h3 id=\"q6-answer\" style=\"position:relative;\"><a href=\"#q6-answer\" aria-label=\"q6 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q6 Answer</h3>\n<ul>\n<li>admission configuration yaml파일에서 kubeConfigFile의 경로를 아래와 같이 명시하여 준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apiserver.config.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> AdmissionConfiguration\n<span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ImagePolicyWebhook\n  <span class=\"token key atrule\">configuration</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">imagePolicy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">kubeConfigFile</span><span class=\"token punctuation\">:</span> /etc/kubernetes/pki/admission_kube_config.yaml\n      <span class=\"token key atrule\">allowTTL</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span>\n      <span class=\"token key atrule\">denyTTL</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span>\n      <span class=\"token key atrule\">retryBackoff</span><span class=\"token punctuation\">:</span> <span class=\"token number\">500</span>\n      <span class=\"token key atrule\">defaultAllow</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<ul>\n<li>/etc/kubernetes/manifests/kube-apiserver.yaml 에서 ImagePolicyWebhook을 추가로 enable해주고, admission-control-config 파일의 경로를 명시해준다.\n<ul>\n<li>admission-control-config 파일의 경로는 pod 내부 경로임에 유의해야 한다. 이 문제에서는 host와 pod에서 동일한 경로를 사용하고 있어서 상관없지만 그렇지 않을 경우에는 헷갈릴 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  - --enable-admission-plugins=NodeRestriction,ImagePolicyWebhook\n  - --admission-control-config-file=/etc/kubernetes/pki/admission_configuration.yaml</code></pre></div>\n</li>\n</ul>\n<h3 id=\"q7\" style=\"position:relative;\"><a href=\"#q7\" aria-label=\"q7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q7</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Delete pods from alpha namespace which are not immutable.\nNote: Any pod which uses elevated privileges and can store state inside the container is considered to be non-immutable.</code></pre></div>\n<h3 id=\"q7-answer\" style=\"position:relative;\"><a href=\"#q7-answer\" aria-label=\"q7 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q7 Answer</h3>\n<ul>\n<li>solaris pod는 <code class=\"language-text\">readOnlyRootFilesystem: true</code> 로 설정되어 있기 때문에 immutable 하다.</li>\n<li>sonata pod는 <code class=\"language-text\">privileged: true</code>로 설정되어 있기에 immutable하지 않고,</li>\n<li>triton pod는 <code class=\"language-text\">readOnlyRootFilesystem: true</code> 를 명시하지 않고 있기 때문에 immutable 하지 않다.</li>\n</ul>\n<p>즉, <code class=\"language-text\">readOnlyRootFilesystem: true</code> 이 설정은 immutable pod에 필수적이다.</p>","excerpt":"EXAM 2 Q1 Q1 Answer 에서 아래 2가지 사항 조치 수정 추가 Q2 Q2 Answer /etc/kubernetes/prod-audit.yaml 작성 kube-apiserver 설정 kube-apiserver volume / volumeMounts 설정 volumes volumeMounts Q3 : kubesec문제로 Pass~ Q4 Q4 Answer dev-write role 추가 developer sa 추가 kubectl create sa developer -n dev dev-write-binding rolebinding 추가 에서 serviceAccount developer로 수정 Q5 (OPA) / 중요! Q5 Answer  configmap에 정의된 rego file을 살펴보면  로 시작하지 않는 repository를 거부하는 설정을 가지고 있다. 따라서 이미지 url을 아래와 같이 고친 후에 pod를 기동해주면 된다. Q6 Q6 Answer admission …","frontmatter":{"date":"November 12, 2023","title":"[CKS] Mockexam 3","categories":"DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/cks-mockexam3/"}},"next":{"id":"59c75a8b-b91f-5258-899d-586b74955d18","html":"<h2 id=\"exam-2\" style=\"position:relative;\"><a href=\"#exam-2\" aria-label=\"exam 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EXAM 2</h2>\n<h3 id=\"q1\" style=\"position:relative;\"><a href=\"#q1\" aria-label=\"q1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q1</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">A pod called redis-backend has been created in the prod-x12cs namespace. \nIt has been exposed as a service of type ClusterIP. \nUsing a network policy called allow-redis-access, lock down access to this pod only to the following:\n\n1. Any pod in the same namespace with the label backend=prod-x12cs.\n2. All pods in the prod-yx13cs namespace.\n\nAll other incoming connections should be blocked.\nUse the existing labels when creating the network policy.</code></pre></div>\n<h3 id=\"q1-answer\" style=\"position:relative;\"><a href=\"#q1-answer\" aria-label=\"q1 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q1 Answer</h3>\n<ul>\n<li>namespaceSelector 에서는 metadata.namspace의 동일한 namespace에 대한 것은 설정할 필요 없고, 다른 namespace에서 접근하고자 하는 경우에만 namespaceSelector를 적용한다.</li>\n<li>namespace에 대한 selector는 label 한 쌍으로 충분하지만, podSelector에서는 pod의 모든 label에 대해서 일치하도록 규칙을 설정하여야 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-redis-access\n  namespace: prod-x12cs\nspec:\n  podSelector:\n    matchLabels:\n      run: redis-backend\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          access: redis\n    - podSelector:\n        matchLabels:\n          backend: prod-x12cs\n    ports:\n    - protocol: TCP\n      port: 6379</code></pre></div>\n<h3 id=\"q2\" style=\"position:relative;\"><a href=\"#q2\" aria-label=\"q2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q2</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">A few pods have been deployed in the apps-xyz namespace. There is a pod called redis-backend which serves as the backend for the apps app1 and app2. The pod called app3 on the other hand, does not need access to this redis-backend pod. Create a network policy called allow-app1-app2 that will only allow incoming traffic from app1 and app2 to the redis-pod.\n\nMake sure that all the available labels are used correctly to target the correct pods. Do not make any other changes to these objects.</code></pre></div>\n<h3 id=\"q2-answer\" style=\"position:relative;\"><a href=\"#q2-answer\" aria-label=\"q2 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q2 Answer</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> allow<span class=\"token punctuation\">-</span>app1<span class=\"token punctuation\">-</span>app2\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> apps<span class=\"token punctuation\">-</span>xyz\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">tier</span><span class=\"token punctuation\">:</span> backend\n      <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> db\n  <span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> app1\n          <span class=\"token key atrule\">tier</span><span class=\"token punctuation\">:</span> frontend\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> app2\n          <span class=\"token key atrule\">tier</span><span class=\"token punctuation\">:</span> frontend</code></pre></div>\n<p>나의 답안은 아래와 같았으나 틀린 이유는 network policy에서 규칙을 정의할 때, 모든 label이 일치하도록 설정해야 하므로 위와 같이 하는 것이 옳다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> allow<span class=\"token punctuation\">-</span>app1<span class=\"token punctuation\">-</span>app2\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> apps<span class=\"token punctuation\">-</span>xyz\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">tier</span><span class=\"token punctuation\">:</span> backend\n      <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> db\n  <span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">matchExpressions</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> name\n          <span class=\"token key atrule\">operator</span><span class=\"token punctuation\">:</span> In\n          <span class=\"token key atrule\">values</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"app1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app2\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"q3\" style=\"position:relative;\"><a href=\"#q3\" aria-label=\"q3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q3</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">A pod has been created in the gamma namespace using a service account called cluster-view. This service account has been granted additional permissions as compared to the default service account and can view resources cluster-wide on this Kubernetes cluster. While these permissions are important for the application in this pod to work, the secret token is still mounted on this pod.\n\nSecure the pod in such a way that the secret token is no longer mounted on this pod. You may delete and recreate the pod.</code></pre></div>\n<h3 id=\"q3-answer\" style=\"position:relative;\"><a href=\"#q3-answer\" aria-label=\"q3 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q3 Answer</h3>\n<ul>\n<li>automountServiceAccountToken: false 필드를 pod에 추가\n<ul>\n<li>이 옵션을 추가해주면 serviceaccount token secret이 pod의 <code class=\"language-text\">/var/run/secrets/kubernetes.io/serviceaccount</code> 경로에 마운트 되지 않게 해준다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> apps<span class=\"token punctuation\">-</span>cluster<span class=\"token punctuation\">-</span>dash\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> apps<span class=\"token punctuation\">-</span>cluster<span class=\"token punctuation\">-</span>dash\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> gamma\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> apps<span class=\"token punctuation\">-</span>cluster<span class=\"token punctuation\">-</span>dash\n  <span class=\"token key atrule\">serviceAccountName</span><span class=\"token punctuation\">:</span> cluster<span class=\"token punctuation\">-</span>view\n  <span class=\"token key atrule\">automountServiceAccountToken</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<h3 id=\"q4\" style=\"position:relative;\"><a href=\"#q4\" aria-label=\"q4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q4</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">A pod in the sahara namespace has generated alerts that a shell was opened inside the container.\nTo recognize such alerts, set the priority to ALERT and change the format of the output so that it looks like the below:\n\nALERT timestamp of the event without nanoseconds,User ID,the container id,the container image repository\nMake sure to update the rule in such a way that the changes will persists across Falco updates.\n\nYou can refer the falco documentation</code></pre></div>\n<h3 id=\"q4-answer\" style=\"position:relative;\"><a href=\"#q4-answer\" aria-label=\"q4 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q4 Answer</h3>\n<ul>\n<li>/etc/falco/falco_rules.local.yaml 에서 아래와 같이 작성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">rule</span><span class=\"token punctuation\">:</span> Terminal shell in container\n  <span class=\"token key atrule\">desc</span><span class=\"token punctuation\">:</span> A shell was used as the entrypoint/exec point into a container with an attached terminal.\n  <span class=\"token key atrule\">condition</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">></span><span class=\"token scalar string\">\n    spawned_process and container\n    and shell_procs and proc.tty != 0\n    and container_entrypoint\n    and not user_expected_terminal_shell_in_container_conditions</span>\n  <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">></span><span class=\"token scalar string\">\n    %evt.time.s,%user.uid,%container.id,%container.image.repository</span>\n  <span class=\"token key atrule\">priority</span><span class=\"token punctuation\">:</span> ALERT\n  <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>container<span class=\"token punctuation\">,</span> shell<span class=\"token punctuation\">,</span> mitre_execution<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>Use the falco documentation to use the correct sysdig filters in the output.</li>\n</ul>\n<p>For example, the evt.time.s filter prints the timestamp for the event without nano seconds. This is clearly described in the falco documentation here - <a href=\"https://falco.org/docs/rules/supported-fields/#evt-field-class\">https://falco.org/docs/rules/supported-fields/#evt-field-class</a></p>\n<h3 id=\"q5\" style=\"position:relative;\"><a href=\"#q5\" aria-label=\"q5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q5</h3>\n<p>martin is a developer who needs access to work on the dev-a, dev-b and dev-z namespace. He should have the ability to carry out any operation on any pod in dev-a and dev-b namespaces. However, on the dev-z namespace, he should only have the permission to get and list the pods.</p>\n<p>The current set-up is too permissive and violates the above condition. Use the above requirement and secure martin’s access in the cluster. You may re-create objects, however, make sure to use the same name as the ones in effect currently.</p>\n<h3 id=\"q5-answer\" style=\"position:relative;\"><a href=\"#q5-answer\" aria-label=\"q5 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q5 Answer</h3>\n<ul>\n<li>role 삭제 후 아래 yaml파일로 role생성\n<ul>\n<li>k delete role dev-user-access -n dev-z</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Role\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> dev<span class=\"token punctuation\">-</span>user<span class=\"token punctuation\">-</span>access\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev<span class=\"token punctuation\">-</span>z\n<span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> pods\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> get\n    <span class=\"token punctuation\">-</span> list</code></pre></div>\n<h3 id=\"q6\" style=\"position:relative;\"><a href=\"#q6\" aria-label=\"q6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q6</h3>\n<p>On the controlplane node, an unknown process is bound to the port 8088. Identify the process and prevent it from running again by stopping and disabling any associated services. Finally, remove the package that was responsible for starting this process.</p>\n<h3 id=\"q6-answer\" style=\"position:relative;\"><a href=\"#q6-answer\" aria-label=\"q6 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q6 Answer</h3>\n<ul>\n<li>netstat으로 8088 포트에 해당하는 process 찾기</li>\n<li>systemctl stop lshttpd</li>\n<li>systemctl disable lshttpd</li>\n<li>동일한 이름의 패키지가 존재하는 지 확인\n<ul>\n<li>apt list —installed | grep openlitespeed</li>\n</ul>\n</li>\n<li>apt remove openlitespeed -y</li>\n</ul>\n<h3 id=\"q7\" style=\"position:relative;\"><a href=\"#q7\" aria-label=\"q7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q7</h3>\n<p>A pod has been created in the omega namespace using the pod definition file located at /root/CKS/omega-app.yaml. However, there is something wrong with it and the pod is not in a running state.</p>\n<p>We have used a custom seccomp profile located at /var/lib/kubelet/seccomp/custom-profile.json to ensure that this pod can only make use of limited syscalls to the Linux Kernel of the host operating system. However, it appears the profile does not allow the read and write syscalls. Fix this by adding it to the profile and use it to start the pod.</p>\n<h3 id=\"q7-answer\" style=\"position:relative;\"><a href=\"#q7-answer\" aria-label=\"q7 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q7 Answer</h3>\n<ul>\n<li>seccomp profile 파일의 경로를 변경\n<ul>\n<li>/var/lib/kubelet/seccomp 하위에 profiles 디렉토리 만들고 거기로 Profile 파일 이동</li>\n</ul>\n</li>\n<li>custom-profile.json에 ‘read’, ‘write’ syscall추가</li>\n<li>pod replace하기\n<ul>\n<li>kubectl replace -f /root/CKS/omega-app.yaml —force</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"q8\" style=\"position:relative;\"><a href=\"#q8\" aria-label=\"q8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q8</h3>\n<p>A pod definition file has been created at /root/CKS/simple-pod.yaml . Using the kubesec tool, generate a report for this pod definition file and fix the major issues so that the subsequent scan report no longer fails.</p>\n<p>Once done, generate the report again and save it to the file /root/CKS/kubesec-report.txt</p>\n<h3 id=\"q8-answer\" style=\"position:relative;\"><a href=\"#q8-answer\" aria-label=\"q8 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q8 Answer</h3>\n<ul>\n<li>SYS_ADMIN capability를 빼고 아래 결과 저장\n<ul>\n<li>kubesec scan /root/CKS/simple-pod.yaml > /root/CKS/kubesec-report.txt</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"q9\" style=\"position:relative;\"><a href=\"#q9\" aria-label=\"q9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q9</h3>\n<p>Create a new pod called secure-nginx-pod in the seth namespace. Use one of the images from the below which has a least number of CRITICAL vulnerabilities.</p>\n<p>nginx\nnginx:1.19\nnginx:1.17\nnginx:1.20\ngcr.io/google-containers/nginx\nbitnami/jenkins:latest</p>\n<h3 id=\"q9-answer\" style=\"position:relative;\"><a href=\"#q9-answer\" aria-label=\"q9 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q9 Answer</h3>\n<ul>\n<li>trivy image —severity CRITICAL {image명} 으로 검사해서 가장 취약점이 적은 gcr.io/google-containers/nginx 이미지로 pod 생성하기\n<ul>\n<li>kubectl -n seth run secure-nginx-pod —image gcr.io/google-containers/nginx</li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"November 11, 2023","title":"[CKS] Mockexam 2","categories":"DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/cks-mockexam2/"}},"prev":{"id":"7eeeb463-9477-5df0-b725-3ed3c90e9682","html":"<h2 id=\"q1\" style=\"position:relative;\"><a href=\"#q1\" aria-label=\"q1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q1.</h2>\n<p>You have access to multiple clusters from your main terminal through kubectl contexts. Write all context names into /opt/course/1/contexts, one per line.</p>\n<p>From the kubeconfig extract the certificate of user restricted@infra-prod and write it decoded to /opt/course/1/cert.</p>\n<h2 id=\"q1-정답\" style=\"position:relative;\"><a href=\"#q1-%EC%A0%95%EB%8B%B5\" aria-label=\"q1 정답 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q1 정답</h2>\n<ul>\n<li>File /opt/course/1/contexts 가 모든 context를 포함하고 있는가\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">k config get-contexts <span class=\"token parameter variable\">-o</span> name <span class=\"token operator\">></span> /opt/course/1/contexts</code></pre></div>\n</li>\n<li>File /opt/course/1/cert 가 cert를 포함하고 있는가\n<ul>\n<li>kubeconfig 파일의 cluster가 아닌 restricted@infra-prod의 user 의 cert내용을 base64 -d로 디코드하여 /opt/course/1/cert에 저장</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"q2\" style=\"position:relative;\"><a href=\"#q2\" aria-label=\"q2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q2</h3>\n<p>Falco is installed with default configuration on node cluster1-node1. Connect using ssh cluster1-node1. Use it to:</p>\n<ul>\n<li>Find a Pod running image nginx which creates unwanted package management processes inside its container.</li>\n<li>Find a Pod running image httpd which modifies /etc/passwd.</li>\n</ul>\n<p>Save the Falco logs for case 1 under /opt/course/2/falco.log in format:\n<code class=\"language-text\">time-with-nanosconds,container-id,container-name,user-name</code>\nNo other information should be in any line. Collect the logs for at least 30 seconds.\nAfterwards remove the threads (both 1 and 2) by scaling the replicas of the Deployments that control the offending Pods down to 0.</p>\n<h3 id=\"q2-정답\" style=\"position:relative;\"><a href=\"#q2-%EC%A0%95%EB%8B%B5\" aria-label=\"q2 정답 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q2 정답</h3>\n<ul>\n<li>/opt/course/2/falco.log 존재하고 정확한 로그 포맷을 가지고 있어야 함\n<ul>\n<li>먼저 /etc/falco/falco.yaml을 살펴보면 syslog에 falco의 로그가 저장되고 있음을 확인할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">syslog_output:\n  enabled: true</code></pre></div>\n<ul>\n<li>따라서 /var/log/syslog 또는 journalctl -fu falco를 통해서 stdout으로 로그를 확인할 수 있다. 로그에서 확인된 문제가 되는 컨테이너 id를 찾는다.</li>\n<li><code class=\"language-text\">crictl pods -id 7a864406b9794</code> 명령으로 1,2번 컨테이너가 기동 중인 pod에 대한 정보를 얻는다.</li>\n<li>falco rule을 수정하여 문제의 포맷으로 로그가 나타나게 만들고, 나타나는 로그를 복사&#x26;붙여넣기로 로컬의 /opt/cousre/2/falco.log에 저장한다.</li>\n</ul>\n</li>\n<li>1번 deployment scaled down\n<ul>\n<li><code class=\"language-text\">k -n team-blue scale deploy webapi --replicas 0</code></li>\n</ul>\n</li>\n<li>2번 deployment scaled down\n<ul>\n<li><code class=\"language-text\">k -n team-purple scale deploy rating-service --replicas 0</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"q3\" style=\"position:relative;\"><a href=\"#q3\" aria-label=\"q3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q3</h3>\n<p>You received a list from the DevSecOps team which performed a security investigation of the k8s cluster1 (workload-prod). The list states the following about the apiserver setup:</p>\n<p>Accessible through a NodePort Service\nChange the apiserver setup so that:</p>\n<p>Only accessible through a ClusterIP Service</p>\n<h3 id=\"q3-정답\" style=\"position:relative;\"><a href=\"#q3-%EC%A0%95%EB%8B%B5\" aria-label=\"q3 정답 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q3 정답</h3>\n<ul>\n<li>kube-apiserver의 yaml파일에서 아래 행을 주석 또는 삭제 처리 ( 수정 전 백업 필수 )\n<ul>\n<li>—kubernetes-service-node-port=31000</li>\n</ul>\n</li>\n<li>위 설정 후에도 <code class=\"language-text\">k delete svc kubernetes</code>를 해주어야 ClusterIP 타입으로 서비스가 재성성되게 된다.</li>\n</ul>\n<h3 id=\"q4\" style=\"position:relative;\"><a href=\"#q4\" aria-label=\"q4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q4</h3>\n<p>There is Deployment container-host-hacker in Namespace team-red which mounts /run/containerd as a hostPath volume on the Node where it’s running. This means that the Pod can access various data about other containers running on the same Node.</p>\n<p>To prevent this configure Namespace team-red to enforce the baseline Pod Security Standard. Once completed, delete the Pod of the Deployment mentioned above.</p>\n<p>Check the ReplicaSet events and write the event/log lines containing the reason why the Pod isn’t recreated into /opt/course/4/logs.</p>\n<h3 id=\"q4-정답\" style=\"position:relative;\"><a href=\"#q4-%EC%A0%95%EB%8B%B5\" aria-label=\"q4 정답 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q4 정답</h3>\n<ul>\n<li>namespace label 설정\n<ul>\n<li>k edit ns team-red 해서 <code class=\"language-text\">pod-security.kubernetes.io/enforce: baseline # add</code> 추가</li>\n</ul>\n</li>\n<li>pod delete\n<ul>\n<li>k -n team-red delete pod container-host-hacker-dbf989777-wm8fc</li>\n</ul>\n</li>\n<li>/opt/course/4/log에 event log 저장\n<ul>\n<li>pod가 delete되면 rs가 다시 pod를 생성해주는데, 이게 왜 fail하는 지는 rs를 살펴봄으로써 알 수 있다.\n<ul>\n<li>k -n team-red describe rs container-host-hacker-dbf989777</li>\n</ul>\n</li>\n<li>위 describe의 결과 중 <code class=\"language-text\">Events:</code>절의 내용을 /opt/course/4/logs에 저장한다.\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Warning  FailedCreate      2m2s (x9 over 2m40s)  replicaset-controller  (combined from similar events): Error creating: pods \"container-host-hacker-dbf989777-kjfpn\" is forbidden: violates PodSecurity \"baseline:latest\": hostPath volumes (volume \"containerdata\")</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"q5--kube-bench-문제로-하라는-대로-하면-됨\" style=\"position:relative;\"><a href=\"#q5--kube-bench-%EB%AC%B8%EC%A0%9C%EB%A1%9C-%ED%95%98%EB%9D%BC%EB%8A%94-%EB%8C%80%EB%A1%9C-%ED%95%98%EB%A9%B4-%EB%90%A8\" aria-label=\"q5  kube bench 문제로 하라는 대로 하면 됨 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q5 : Kube-bench 문제로 하라는 대로 하면 됨</h3>\n<h3 id=\"q6\" style=\"position:relative;\"><a href=\"#q6\" aria-label=\"q6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q6</h3>\n<ul>\n<li>아래 명령들을 이용해서 어떤 binary가 문제가 되는 지 찾으면 된다. 한 letter만 다른 경우가 있을 수 있으니 반드시 uniq 사용하기\n<ul>\n<li><code class=\"language-text\">sha512sum {binary file}</code></li>\n<li><code class=\"language-text\">cat {file} | uniq</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"q7\" style=\"position:relative;\"><a href=\"#q7\" aria-label=\"q7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q7</h3>\n<p>The Open Policy Agent and Gatekeeper have been installed to, among other things, enforce blacklisting of certain image registries. Alter the existing constraint and/or template to also blacklist images from very-bad-registry.com.</p>\n<p>Test it by creating a single Pod using image very-bad-registry.com/image in Namespace default, it shouldn’t work.</p>\n<p>You can also verify your changes by looking at the existing Deployment untrusted in Namespace default, it uses an image from the new untrusted source. The OPA contraint should throw violation messages for this one.</p>\n<h3 id=\"q7-정답\" style=\"position:relative;\"><a href=\"#q7-%EC%A0%95%EB%8B%B5\" aria-label=\"q7 정답 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q7 정답</h3>\n<ul>\n<li>gatekeeper의 crd를 살펴보기\n<ul>\n<li>k get crd</li>\n</ul>\n</li>\n<li>이 중에 constraint만 따로 조회하기\n<ul>\n<li>k get constraint</li>\n<li>그리고 그중에 blacklisting image와 관련이 있을 것 같은 constraint에 대해 살펴본다.\n<ul>\n<li>k edit blacklistimages pod-trusted-images\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> constraints.gatekeeper.sh/v1beta1\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> BlacklistImages\n  <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">match</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">kinds</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token key atrule\">kinds</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> Pod</code></pre></div>\n</li>\n</ul>\n</li>\n<li>살펴보면 모든 pod에 적용되게 되어 있으므로 constraintTemplate을 열고 수정한다.\n<ul>\n<li><code class=\"language-text\">not startswith(image, \"very-bad-registry.com/\")</code> 이 행을 rego에 추가</li>\n<li>k edit constrainttemplates blacklistimages\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> templates.gatekeeper.sh/v1beta1\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConstraintTemplate\n  <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">crd</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">names</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> BlacklistImages\n    <span class=\"token key atrule\">targets</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">rego</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        package k8strustedimages</span>\n\n        images <span class=\"token punctuation\">{</span>\n          image <span class=\"token punctuation\">:</span>= input.review.object.spec.containers<span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span>.image\n          not startswith(image<span class=\"token punctuation\">,</span> \"docker<span class=\"token punctuation\">-</span>fake.io/\")\n          not startswith(image<span class=\"token punctuation\">,</span> \"google<span class=\"token punctuation\">-</span>gcr<span class=\"token punctuation\">-</span>fake.com/\")\n          not startswith(image<span class=\"token punctuation\">,</span> \"very<span class=\"token punctuation\">-</span>bad<span class=\"token punctuation\">-</span>registry.com/\") <span class=\"token comment\"># ADD THIS LINE</span>\n        <span class=\"token punctuation\">}</span>\n\n        violation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token key atrule\">\"msg\"</span><span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n          not images\n          msg <span class=\"token punctuation\">:</span>= \"not trusted image<span class=\"token tag\">!</span>\"\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> admission.k8s.gatekeeper.sh</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>이제 <code class=\"language-text\">k run opa-test --image=very-bad-registry.com/image</code> 로 테스트해보면 OPA에서 막히는 걸 확인할 수 있다.</li>\n</ul>\n<h3 id=\"q8--secure-k8s-dashboard\" style=\"position:relative;\"><a href=\"#q8--secure-k8s-dashboard\" aria-label=\"q8  secure k8s dashboard permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q8 : Secure K8S dashboard</h3>\n<p>The Kubernetes Dashboard is installed in Namespace kubernetes-dashboard and is configured to:</p>\n<p>Allow users to “skip login”\nAllow insecure access (HTTP without authentication)\nAllow basic authentication\nAllow access from outside the cluster\nYou are asked to make it more secure by:</p>\n<p>Deny users to “skip login”\nDeny insecure access, enforce HTTPS (self signed certificates are ok for now)\nAdd the —auto-generate-certificates argument\nEnforce authentication using a token (with possibility to use RBAC)\nAllow only cluster internal access</p>\n<h3 id=\"q8-정답\" style=\"position:relative;\"><a href=\"#q8-%EC%A0%95%EB%8B%B5\" aria-label=\"q8 정답 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q8 정답</h3>\n<ul>\n<li>k -n kubernetes-dashboard get pod,svc 로 살펴보기</li>\n<li>service가 NodePort로 expose되어 있는 걸 위에서 확인하고 노드ip확인 후\n<ul>\n<li>curl <a href=\"http://192.168.100.11:32520\">http://192.168.100.11:32520</a> 로 접근됨을 확인 ( 즉, unsecure )</li>\n</ul>\n</li>\n<li>k -n kubernetes-dashboard edit deploy kubernetes-dashboard 하여 secure하게 설정하기\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">    <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">args</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>namespace=kubernetes<span class=\"token punctuation\">-</span>dashboard  \n          <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>authentication<span class=\"token punctuation\">-</span>mode=token        <span class=\"token comment\"># change or delete, \"token\" is default</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>auto<span class=\"token punctuation\">-</span>generate<span class=\"token punctuation\">-</span>certificates       <span class=\"token comment\"># add</span>\n          <span class=\"token comment\">#- --enable-skip-login=true          # delete or set to false</span>\n          <span class=\"token comment\">#- --enable-insecure-login           # delete</span>\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> kubernetesui/dashboard<span class=\"token punctuation\">:</span>v2.0.3\n          <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> Always\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kubernetes<span class=\"token punctuation\">-</span>dashboard</code></pre></div>\n<ul>\n<li>k -n kubernetes-dashboard edit svc kubernetes-dashboard 를 통해 nodePort로 접근되지 않도록 ㅇservice 수정하기\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"> <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">clusterIP</span><span class=\"token punctuation\">:</span> 10.107.176.19\n  <span class=\"token key atrule\">externalTrafficPolicy</span><span class=\"token punctuation\">:</span> Cluster   <span class=\"token comment\"># delete</span>\n  <span class=\"token key atrule\">internalTrafficPolicy</span><span class=\"token punctuation\">:</span> Cluster\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n    <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32513</span>                <span class=\"token comment\"># delete</span>\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9090</span>\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9090</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> https\n    <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32441</span>                <span class=\"token comment\"># delete</span>\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8443</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">k8s-app</span><span class=\"token punctuation\">:</span> kubernetes<span class=\"token punctuation\">-</span>dashboard\n  <span class=\"token key atrule\">sessionAffinity</span><span class=\"token punctuation\">:</span> None\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP                  <span class=\"token comment\"># change or delete</span>\n<span class=\"token key atrule\">status</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">loadBalancer</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"q9--apparmor\" style=\"position:relative;\"><a href=\"#q9--apparmor\" aria-label=\"q9  apparmor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q9 : AppArmor</h3>\n<p>Some containers need to run more secure and restricted. There is an existing AppArmor profile located at /opt/course/9/profile for this.</p>\n<p>Install the AppArmor profile on Node cluster1-node1. Connect using ssh cluster1-node1.</p>\n<p>Add label security=apparmor to the Node</p>\n<p>Create a Deployment named apparmor in Namespace default with:</p>\n<ul>\n<li>One replica of image nginx:1.19.2</li>\n<li>NodeSelector for security=apparmor</li>\n<li>Single container named c1 with the AppArmor profile enabled</li>\n</ul>\n<p>The Pod might not run properly with the profile enabled. Write the logs of the Pod into /opt/course/9/logs so another team can work on getting the application running.</p>\n<h3 id=\"q9-정답\" style=\"position:relative;\"><a href=\"#q9-%EC%A0%95%EB%8B%B5\" aria-label=\"q9 정답 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q9 정답</h3>\n<ul>\n<li>이 문제는 mockexam의 AppArmor문제와 크게 다르지 않은데 단지 로컬 환경에서 node1로 profile파일을 옮겨줘야 하기에 scp 명령을 활용하거나 copy&#x26;paste해야 한다.\n<ul>\n<li><code class=\"language-text\">scp /opt/course/9/profile cluster1-node1:~/</code></li>\n</ul>\n</li>\n<li>모든 작업이 끝난 후 로그를 로컬 파일에 저장\n<ul>\n<li>k logs apparmor-85c65645dc-jbch8 > /opt/course/9/logs</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"q10--container-runtime-sandbox-gvisor\" style=\"position:relative;\"><a href=\"#q10--container-runtime-sandbox-gvisor\" aria-label=\"q10  container runtime sandbox gvisor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q10 : Container Runtime Sandbox gVisor</h3>\n<p>Team purple wants to run some of their workloads more secure. Worker node cluster1-node2 has container engine containerd already installed and it’s configured to support the runsc/gvisor runtime.</p>\n<p>Create a RuntimeClass named gvisor with handler runsc.</p>\n<p>Create a Pod that uses the RuntimeClass. The Pod should be in Namespace team-purple, named gvisor-test and of image nginx:1.19.2. Make sure the Pod runs on cluster1-node2.</p>\n<p>Write the dmesg output of the successfully started Pod into /opt/course/10/gvisor-test-dmesg.</p>\n<h3 id=\"q10-answer\" style=\"position:relative;\"><a href=\"#q10-answer\" aria-label=\"q10 answer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q10 Answer</h3>\n<ul>\n<li>아래 Runtimeclass 생성 후 apply\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> node.k8s.io/v1\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> RuntimeClass\n  <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gvisor\n  <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> runsc</code></pre></div>\n</li>\n<li>k -n team-purple run gvisor-test —image=nginx:1.19.2 —dry-run=client -o yaml > 10_pod.yaml 를 하여 만들어진 파일 기반으로 2개 행을 아래처럼 추가하여 apply\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">creationTimestamp</span><span class=\"token punctuation\">:</span> <span class=\"token null important\">null</span>\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> gvisor<span class=\"token punctuation\">-</span>test\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gvisor<span class=\"token punctuation\">-</span>test\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> team<span class=\"token punctuation\">-</span>purple\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nodeName</span><span class=\"token punctuation\">:</span> cluster1<span class=\"token punctuation\">-</span>node2 <span class=\"token comment\"># add</span>\n  <span class=\"token key atrule\">runtimeClassName</span><span class=\"token punctuation\">:</span> gvisor   <span class=\"token comment\"># add</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span>1.19.2\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gvisor<span class=\"token punctuation\">-</span>test\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">dnsPolicy</span><span class=\"token punctuation\">:</span> ClusterFirst\n  <span class=\"token key atrule\">restartPolicy</span><span class=\"token punctuation\">:</span> Always\n<span class=\"token key atrule\">status</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>dmesg 로 pod가 gvisor sandbox가 적용되었는 지 확인 후 output으로 로그 저장한다.\n<ul>\n<li>k -n team-purple exec gvisor-test — dmesg > /opt/course/10/gvisor-test-dmesg₩`</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"q11--secrets-in-etcd\" style=\"position:relative;\"><a href=\"#q11--secrets-in-etcd\" aria-label=\"q11  secrets in etcd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q11 : Secrets in ETCD</h3>\n<p>There is an existing Secret called database-access in Namespace team-green.\nRead the complete Secret content directly from ETCD (using etcdctl) and store it into /opt/course/11/etcd-secret-content. Write the plain and decoded Secret’s value of key “pass” into /opt/course/11/database-password.</p>\n<h3 id=\"q11-정답\" style=\"position:relative;\"><a href=\"#q11-%EC%A0%95%EB%8B%B5\" aria-label=\"q11 정답 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q11 정답</h3>\n<ul>\n<li>kube-apiserver.yaml 파일에서 etcd 관련된 cert 설정을 찾는다.</li>\n<li>이를 활용하여 etcdctl 명령어를 써서 값을 얻어와야 한다. (kubernetes.io 참고)\n<ul>\n<li>ETCD 는 <code class=\"language-text\">/registry/{type}/{namespace}/{name}</code> 경로에 데이터를 저장한다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- ETCDCTL_API=3 etcdctl \\\n--cert /etc/kubernetes/pki/apiserver-etcd-client.crt \\\n--key /etc/kubernetes/pki/apiserver-etcd-client.key \\\n--cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/secrets/team-green/database-access</code></pre></div>\n<ul>\n<li>이 결과를 /opt/course/11/etcd-secret-content에 저장한다.</li>\n<li>위에서 얻은 secret의 결과로부터 password를 base64 decode하여 /opt/course/11/database-password에 저장한다.</li>\n</ul>\n<h3 id=\"q12\" style=\"position:relative;\"><a href=\"#q12\" aria-label=\"q12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q12</h3>\n<p>You’re asked to investigate a possible permission escape in Namespace restricted. The context authenticates as user restricted which has only limited permissions and shouldn’t be able to read Secret values.\n<br>\nTry to find the password-key values of the Secrets secret1, secret2 and secret3 in Namespace restricted. Write the decoded plaintext values into files /opt/course/12/secret1, /opt/course/12/secret2 and /opt/course/12/secret3.</p>","frontmatter":{"date":"November 14, 2023","title":"[CKS] Killer shell","categories":"DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/cks-killershell/"}},"site":{"siteMetadata":{"siteUrl":"https://jjunyong.github.io","comments":{"utterances":{"repo":"jjunyong/jjunyong.github.io"}}}}},"pageContext":{"slug":"/cks-mockexam3/","nextSlug":"/cks-mockexam2/","prevSlug":"/cks-killershell/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}