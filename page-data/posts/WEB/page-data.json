{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/WEB",
    "result": {"pageContext":{"currentCategory":"WEB","categories":["All","Spring","디자인패턴","Git","AWS","WEB"],"edges":[{"node":{"id":"79f31ae3-dbbe-5ef8-9900-dd9942dc8f04","excerpt":"REST에 대해서 웹 문서들을 살펴보면 여러가지 표현들로 설명하고 있는데, 그것을 조합해서 내가 이해하기 쉽게 정의하자면 아래와 같다. “REST API란 HTTP Method를 사용하여 HTTP URI 형태로 명시된 리소스를 처리(CRUD) 하도록 설계된 클라이언트와 서버 간의 통신 방식이다”  클라이언트가 GET, POST, PUT, DELETE 등의 HTTP 메소드를 통해 URI로 서버에 요청하게 되면 서버는 해당되는 리소스에 대한 CRUD를 처리하고 클라이언트에 JSON 데이터를 반환한다. REST API의 구성 요소 1. Resource : REST에서는 resource의 정보를 표현할 수 있어야 하며 이를 위해 URI를 사용한다. 2. Method : resource에 대한 행위를 표현하며, HTTP의 GET(조회), POST(추가), PUT(수정), DELETE(삭제) 메소드를 사용한다. 3. Representaion : REST에서 representation(표현)이…","fields":{"slug":"/rest-api/"},"frontmatter":{"categories":"WEB","title":"REST API란 무엇인가? REST API 제약조건, 실용적인 REST API 설계 방법 ( feat. RESTful하다는 것 )","date":"January 25, 2022"}},"next":null,"previous":{"fields":{"slug":"/spring-boot-aws-environment/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}