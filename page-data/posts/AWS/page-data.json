{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/AWS",
    "result": {"pageContext":{"currentCategory":"AWS","categories":["All","Linux","DB","Spring","AWS","Error","WEB","Java","디자인패턴","Git"],"edges":[{"node":{"id":"d4e6a6e4-e0b4-52de-85b7-736628dbf089","excerpt":"Spring boot 개발환경에서 AWS S3를 활용하여 파일을 업로드하고 이를 DB를 URL로 저장하는 방법과\n파일 명을 이용해서 S3로부터 파일을 다운로드 하는 방법에 대해서 알아보자. 1. Spring boot 의존성, 환경 설정 build.gradle app.properties 2. S3 Config 클래스 설정 위 application.properties에서 설정한 accessKey, secretkey, region값을 @Value 어노테이션을 활용하여\nAwsS3Config 클래스에서 가져와서 AWSCredential을 설정한다. 이 때 나는 jasypt를 활용해서 key값을 보호하도록 했는데 해당 내용은 이 글을 참고하자. 3. S3 업로드 Controller 설정 나는 본 글의 title처럼 Club이라는 entity를 생성할 때 S3에 썸네일 이미지가 업로드 됨과 동시에 DB에 S3에 업로드된 이미지의 URL도\n저장되도록 설정하도록 하였다. 그리고 그러기 위해서 @R…","fields":{"slug":"/aws-s3/"},"frontmatter":{"categories":"AWS","title":"[AWS] Spring boot에서 AWS S3로 파일 업로드하면서 DB에 URL 저장하는 방법","date":"April 23, 2022"}},"next":{"fields":{"slug":"/aws-jasypt/"}},"previous":{"fields":{"slug":"/querydsl1/"}}},{"node":{"id":"9bf85671-8a17-5a6e-8503-65385d57a3c1","excerpt":"Spring boot 환경에서 AWS S3를 연동해서 사용하려고 하면, application.yml 또는 application.properties에 아\n래와 같이 accessKey, secretKey값을 설정해줄 것이다. 그런데 이렇게 설정을 하게 되면 AWS의 accessKey, secretKey값이 깃헙에 노출되는 문제가 발생한다. 이미 나는 그걸 모르고 별일 없겠지라는 안일한 생각으로 깃헙에 코드를 푸시했다가 이틀 만에 해킹(ㅠㅠ) 당하는 일을 겪어야 했다. 이틀 만에 80 달러 치를 썼더라 해커놈 ㅡㅡ 그러니 반드시 Jasypt를 활용해서 AWS key값을 암호화해서 올리시길 바란다. Jasypt : Java Simplified Encryption으로 암호화를 위한 Library이다. 보통 프로퍼티에 노출되는 중요 정보들을 암호화 해주는 용도로 사용한다. 1. 의존성 설정 ( build.gradle ) 나는 gradle을 사용하기 때문에 아래와 같이 간단한게 jasypt를 …","fields":{"slug":"/aws-jasypt/"},"frontmatter":{"categories":"AWS","title":"[AWS] AWS key값을 Jasypt를 이용해서 보호하자","date":"April 15, 2022"}},"next":{"fields":{"slug":"/error-insert/"}},"previous":{"fields":{"slug":"/aws-s3/"}}},{"node":{"id":"c2fcb249-3189-5828-b2e1-d04bc2273100","excerpt":"1. AWS에서 프리티어로 EC2와 RDS 발급하기 1) EC2 인스턴스 발급 AWS 에 들어가서 EC2 인스턴스 생성하기로 가서 생성하면 된다. 프리티어로 발급 가능한 인스턴스를 발급 받았다. 발급 시 신경 써 주어야 할 부분은 프리티어에서 사용 가능한 최대 스토리지 설정(30GB)과 보안그룹에서 규칙을 설정하는 것이다. 보안그룹을 설정하지 않으면 생성한 EC2 서버로 모든 통신이 불가능하기 때문에 필요한 port와 사용자에 대해 꼭 설정해주어야 함! 나는 Front/Back-end를 위해 각각 3000,8080포트를 모든 사용자에게 허용하고 http,https를 통한 접근 허용을 위해 80,443 포트도 열어두었다. 2) EC2 ssh 접속 테스트 Windows에선 putty 설치해서, Mac에선 ssh 커맨드라인 툴을 이용해서 ssh priavte key를 사용해서 접속하면 된다.\n계정명은 ubuntu로 초기 로그인이 되며 su 명령어를 통해 root로 유저를 변경하여 roo…","fields":{"slug":"/spring-boot-aws-environment/"},"frontmatter":{"categories":"AWS","title":"Spring boot 개발환경 설정 (gradle,JPA,MySQL,EC2,RDS)","date":"February 04, 2022"}},"next":{"fields":{"slug":"/rest-httpcode-exception/"}},"previous":{"fields":{"slug":"/aem1/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}