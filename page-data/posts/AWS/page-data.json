{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/AWS",
    "result": {"pageContext":{"currentCategory":"AWS","categories":["All","AWS","Spring","WEB","Java","디자인패턴","Git","AEM","Error"],"edges":[{"node":{"id":"0844a804-5826-55ab-b4cf-d3ace9b96070","excerpt":"Spring boot 환경에서 AWS S3를 연동해서 사용하려고 하면, application.yml 또는 application.properties에 아\n래와 같이 accessKey, secretKey값을 설정해줄 것이다. 그런데 이렇게 설정을 하게 되면 AWS의 accessKey, secretKey값이 깃헙에 노출되는 문제가 발생한다. 이미 나는 그걸 모르고 별일 없겠지라는 안일한 생각으로 깃헙에 코드를 푸시했다가 이틀 만에 해킹(ㅠㅠ) 당하는 일을 겪어야 했다. 이틀 만에 80 달러 치를 썼더라 해커놈 ㅡㅡ 그러니 반드시 Jasypt를 활용해서 AWS key값을 암호화해서 올리시길 바란다. Jasypt : Java Simplified Encryption으로 암호화를 위한 Library이다. 보통 프로퍼티에 노출되는 중요 정보들을 암호화 해주는 용도로 사용한다. 1. 의존성 설정 ( build.gradle ) 나는 gradle을 사용하기 때문에 아래와 같이 간단한게 jasypt를 …","fields":{"slug":"/aws_jasypt/"},"frontmatter":{"categories":"AWS","title":"[AWS] AWS key값을 Jasypt를 이용해서 보호하자","date":"April 15, 2022"}},"next":{"fields":{"slug":"/aws_s3/"}},"previous":null},{"node":{"id":"990ffc16-8ae9-5ca3-b946-ba775fae64be","excerpt":"Spring boot 개발환경에서 AWS S3를 활용하여 파일을 업로드하고 이를 DB를 URL로 저장하는 방법과\n파일 명을 이용해서 S3로부터 파일을 다운로드 하는 방법에 대해서 알아보자. Spring boot 의존성 설정","fields":{"slug":"/aws_s3/"},"frontmatter":{"categories":"AWS","title":"[AWS] Spring boot에서 AWS S3에 파일 업/다운로드하고 DB에 URL 저장하는 방법","date":"March 22, 2022"}},"next":{"fields":{"slug":"/jpa7/"}},"previous":{"fields":{"slug":"/aws_jasypt/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}