{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/클라우드","result":{"pageContext":{"currentCategory":"클라우드","categories":["All","WEB","Error","DevOps","Java/Kotlin","Linux","Troubleshoot","영어","클라우드","독서","회고","Data","AWS","Spring","디자인패턴"],"edges":[{"node":{"id":"62d2a112-6dad-551a-b4e4-7650a4035595","excerpt":"super user 권한 없이 docker 사용하기 docker에서 컨테이너 생성하고 내부로 들어가기 컨테이너란? 컨테이너는 독립된 리눅스 환경이다. 컨테이너는 단일 프로세스이다.\n Docker 구조  부모 프로세스가 1번인 daemon 프로세스의 형태로 dockerd는 구동된다. docker CLI 명령은 dockerd에 전달된다. 전달하는 방식은 /var/run/docker.sock containerd가 container runtime이며 /run/containerd/containerd.sock 을 통해서 docker\bd와 통신한다. docker 컨테이너 내부에서 CLI명령을 사용하고자 하면 전체 컨테이너에 대한 정보를 dockerd를 통해서 알아내야 하기 때문에 호스트의 /var/run/docker.sock를 도커 컨테이너 내에서 참조할 수 있도록 마운트되어야 한다. dockerd, docker CLI 프로세스는 아래와 같이 tmpfs 파일 시스템 즉, 메모리에 올라간 doc…","fields":{"slug":"/network-practice9/"},"frontmatter":{"categories":"Linux 클라우드","title":"Docker 네트워크 구조","date":"February 27, 2024"}},"next":{"fields":{"slug":"/network-practice8/"}},"previous":{"fields":{"slug":"/network-practice10/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}