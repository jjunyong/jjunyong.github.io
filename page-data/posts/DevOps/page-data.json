{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/DevOps",
    "result": {"pageContext":{"currentCategory":"DevOps","categories":["All","DevOps","Linux","DB","Spring","AWS","Error","WEB","Java","디자인패턴","Git"],"edges":[{"node":{"id":"83fbc418-ebe7-5158-a8e0-5f8d2d000eb0","excerpt":"1. 사전 설정 : 사전 설정은 모든 노드에서 실행해주어야 한다. cri-docker Install cri-docker Version Check cri-docker Active Check Docker cgroup Change Require to Systemd 2.  패키지 설치 : kubeadm, kubectl, kubelet 패키지 설치도 모든 노드에서 실행 해준다. Swap disable 처리  iptable이 bridged traffic 을 바라볼 수 있도록 설정.   컨테이너는 가상화된 네트워크 인터페이스를 사용하므로, 컨테이너 간의 통신 및 네트워크 기능을 지원하기 위해 호스트 단에서 커널 parameter를 위와 같이 변경하는 것이다. net.bridge.bridge-nf-call-ip6tables = 1: 이 설정은 IPv6 네트워크 트래픽이 브리지로 전달되어 IP 테이블에서 필터링될 수 있도록 한다. net.bridge.bridge-nf-call-iptables = …","fields":{"slug":"/on-premise2/"},"frontmatter":{"categories":"DevOps","title":"On-premise 서버 구축하기 2. K8S 클러스터 설치","date":"July 01, 2023"}},"next":{"fields":{"slug":"/on-premise1/"}},"previous":null},{"node":{"id":"db355e4e-68b0-52ba-bab3-1048577684ab","excerpt":"1. 서버/VM 구축 1. 서버 셋팅 1) 공유기 설정 공유기 어드민 콘솔에 접근하여 DDNS 설정, 포트포워딩, 고정IP 할당을 해준다. 공유기 콘솔에 접근 하는 방법은 공유기 제조사 마다 다른데, 나의 경우는 tplink라서 192.168.0.1로 접근 가능 고정 IP 설정 공유기 콘솔에 들어가면 연결된 서버에 고정 ip를 할당 포트포워딩 설정 할당된 고정 ip에 포트포워딩을 설정한다. 예를 들어 공유기로 8080 포트로 들어왔을 때 서버의 9090포트로 포워딩 되도록 설정하는 것이다. 동적 DNS 설정 ( DDNS ) 실제 공유기의 공인 ip는 변동되기 때문에 동적 DNS 설정을 통해 ‘aaa.tplinkdns.com’ 이런 도메인으로 외부에서 서버로 접속 할 수 있도록 해주어야 한다. 여기까지 하면 aaa.tplinikdns.com:8080으로 접속했을 때, 내 서버가 설치된 공유기의 8080포트로 접속이 되게 되고, 고정ip와 포트포워딩 설정을 통해 LAN내에 존재하는 내…","fields":{"slug":"/on-premise1/"},"frontmatter":{"categories":"DevOps","title":"On-premise 서버 구축하기 1. 공유기, 서버, 네트웍 설정","date":"July 01, 2023"}},"next":{"fields":{"slug":"/linux-w1/"}},"previous":{"fields":{"slug":"/on-premise2/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}