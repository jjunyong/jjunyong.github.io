{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Java","result":{"pageContext":{"currentCategory":"Java","categories":["All","Linux","독서","Error","DevOps","AWS","DB","Spring","WEB","Java","디자인패턴","Git"],"edges":[{"node":{"id":"45a45b35-56d7-5384-a2c1-a68ec09b63c9","excerpt":"어노테이션이란 무엇인가? 어노테이션은 자바에서 compile, run타임 시 코드를 어떻게 처리할 것인 지에 대한 메타데이터라고 볼 수 있다. 어노테이션의 목적 컴파일러에게 문법 에러를 체크하기 위한 정보 제공 (ex. @Override ) 개발 툴에서 코드를 자동으로 생성할 수 있는지 정보 제공 런타임 시 특정 기능을 실행하기 위한 정보 제공 ( ex. @Controller) 커스텀 어노테이션 만들기 선언 아래와 같이 MyAnnotation을 간단하게 생성할 수 있다. Element 멤버 외부의 값을 입력받을 수 있게 하는 역할 element 선언 아래와 같은 형태로 element 타입, 이름, default값을 설정하여 선언할 수 있다.\n물론 default 값은 생략 가능하다. 그리고 이 어노테이션을 외부에서 쓸 때, 아래와 같이 element값을 지정할 수 있다. 기본 element : value 어노테이션에는 value라는 기본 element가 존재하며 아래와 같이 설정할 …","fields":{"slug":"/annotation/"},"frontmatter":{"categories":"Java","title":"[Java] 어노테이션이란(Annotation)? 커스텀 어노테이션을 만들어 보자","date":"February 17, 2022"}},"next":{"fields":{"slug":"/design-pattern-state/"}},"previous":{"fields":{"slug":"/spring-swagger/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}