{"componentChunkName":"component---src-templates-blog-template-js","path":"/onyou-restrospect/","result":{"data":{"cur":{"id":"e5369fc4-4b61-5ccb-b3f3-caeb1444a97d","html":"<h2 id=\"1-온유-앱을-시작하고-출시하기-까지\" style=\"position:relative;\"><a href=\"#1-%EC%98%A8%EC%9C%A0-%EC%95%B1%EC%9D%84-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B3%A0-%EC%B6%9C%EC%8B%9C%ED%95%98%EA%B8%B0-%EA%B9%8C%EC%A7%80\" aria-label=\"1 온유 앱을 시작하고 출시하기 까지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 온유 앱을 시작하고 출시하기 까지</h2>\n<h2 id=\"2-배운-점--liked-learned-\" style=\"position:relative;\"><a href=\"#2-%EB%B0%B0%EC%9A%B4-%EC%A0%90--liked-learned-\" aria-label=\"2 배운 점  liked learned  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 배운 점 ( Liked, Learned )</h2>\n<h3 id=\"기술적-요소\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%88%A0%EC%A0%81-%EC%9A%94%EC%86%8C\" aria-label=\"기술적 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기술적 요소</h3>\n<h3 id=\"협업적-요소\" style=\"position:relative;\"><a href=\"#%ED%98%91%EC%97%85%EC%A0%81-%EC%9A%94%EC%86%8C\" aria-label=\"협업적 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>협업적 요소</h3>\n<h3 id=\"기획적-요소\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%9A%8D%EC%A0%81-%EC%9A%94%EC%86%8C\" aria-label=\"기획적 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기획적 요소</h3>\n<h2 id=\"3-아쉬웠던-점--lacked-\" style=\"position:relative;\"><a href=\"#3-%EC%95%84%EC%89%AC%EC%9B%A0%EB%8D%98-%EC%A0%90--lacked-\" aria-label=\"3 아쉬웠던 점  lacked  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 아쉬웠던 점 ( Lacked )</h2>\n<h3 id=\"기술적-요소--기술-부채와-개선점-\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%88%A0%EC%A0%81-%EC%9A%94%EC%86%8C--%EA%B8%B0%EC%88%A0-%EB%B6%80%EC%B1%84%EC%99%80-%EA%B0%9C%EC%84%A0%EC%A0%90-\" aria-label=\"기술적 요소  기술 부채와 개선점  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기술적 요소 ( 기술 부채와 개선점 )</h3>\n<h3 id=\"기획적-요소-1\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%9A%8D%EC%A0%81-%EC%9A%94%EC%86%8C-1\" aria-label=\"기획적 요소 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기획적 요소</h3>\n<h2 id=\"4-앞으로의-기대--longed-for-\" style=\"position:relative;\"><a href=\"#4-%EC%95%9E%EC%9C%BC%EB%A1%9C%EC%9D%98-%EA%B8%B0%EB%8C%80--longed-for-\" aria-label=\"4 앞으로의 기대  longed for  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 앞으로의 기대 ( Longed for )</h2>\n<h3 id=\"앱-스토어-링크\" style=\"position:relative;\"><a href=\"#%EC%95%B1-%EC%8A%A4%ED%86%A0%EC%96%B4-%EB%A7%81%ED%81%AC\" aria-label=\"앱 스토어 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>앱 스토어 링크</h3>","excerpt":"1. 온유 앱을 시작하고 출시하기 까지 2. 배운 점 ( Liked, Learned ) 기술적 요소 협업적 요소 기획적 요소 3. 아쉬웠던 점 ( Lacked ) 기술적 요소 ( 기술 부채와 개선점 ) 기획적 요소 4. 앞으로의 기대 ( Longed for ) 앱 스토어 링크","frontmatter":{"date":"December 01, 2023","title":"[온유] 앱 개발&운영 회고","categories":"회고","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/onyou-restrospect/"}},"next":{"id":"24dcb914-b2ff-506d-813e-ffdeeee12a65","html":"<h2 id=\"1-kube-bench-문제\" style=\"position:relative;\"><a href=\"#1-kube-bench-%EB%AC%B8%EC%A0%9C\" aria-label=\"1 kube bench 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Kube-bench 문제</h2>\n<p>문제에서 kube-bench를 실행 후 도출되는 아래 취약점에 대해서 조치하라는 문제</p>\n<ul>\n<li>kube api server 취약점\n<ul>\n<li>Ensure —authorization-mode argument is not set to AlwaysAllow</li>\n<li>Ensure —authorization-mode includes Node, RBAC</li>\n<li>Ensure —insecure-bind-address argument is not set</li>\n</ul>\n</li>\n<li>kubelet 취약점\n<ul>\n<li>Ensure anonymous-auth argument is set to false</li>\n<li>Ensure —authorization-mode argument is not set to AlwaysAllow</li>\n</ul>\n</li>\n<li>etcd 취약점\n<ul>\n<li>Ensure —client-cert-auth argument is set to true</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"정답\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5\" aria-label=\"정답 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>kube api server 조치\n<ul>\n<li><code class=\"language-text\">--authorization-mode=Node,RBAC</code> 로 설정</li>\n<li><code class=\"language-text\">--insecure-bind-address=0.0.0.0</code> 로 되어 있는 행 삭제</li>\n</ul>\n</li>\n<li>kubelet 조치\n<ul>\n<li>/var/lib/kubelet/config.yaml 파일에서 아래와 같이 설정\n<ul>\n<li>anonymous-auth false로 설정\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">authentication:\n  anonymous:\n    enabled: false</code></pre></div>\n</li>\n<li>authorization-mode Webhook으로 설정\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  authorization:\n    mode: Webhook</code></pre></div>\n</li>\n</ul>\n</li>\n<li><code class=\"language-text\">systemctl daemon-reload</code>, <code class=\"language-text\">systemctl restart</code> 해주기</li>\n</ul>\n</li>\n<li>etcd 조치\n<ul>\n<li>/etc/kubernetes/manifests/etcd.yaml에서 아래와 같이 설정\n<ul>\n<li><code class=\"language-text\">--client-cert-auth=true</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-serviceaccount-문제\" style=\"position:relative;\"><a href=\"#2-serviceaccount-%EB%AC%B8%EC%A0%9C\" aria-label=\"2 serviceaccount 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. ServiceAccount 문제</h2>\n<p>Your organization’s security policies include:</p>\n<ul>\n<li>serviceaccount does not automatically mount API credentials</li>\n<li>serviceaccount name must end with “-sa”</li>\n</ul>\n<p>Listing file <code class=\"language-text\">/cs/sa/pod1.yaml</code>. The pod specified in yaml cannot be scheduled due to an error specified in serviceaccount.</p>\n<p>Please complete the project:</p>\n<ul>\n<li>\n<ol>\n<li>Create new serviceaccount named <code class=\"language-text\">backend-sa</code> in the existing namespace <code class=\"language-text\">qa</code> to ensure that this serviceaccount does not automatically mount API credentials.</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>Use <code class=\"language-text\">/cs/sa/pod1.yaml</code> to create a pod</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>Finally, clean up any unused serviceaccounts in namespace <code class=\"language-text\">qa</code></li>\n</ol>\n</li>\n</ul>\n<h3 id=\"정답-1\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-1\" aria-label=\"정답 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>\n<ol>\n<li><code class=\"language-text\">k create sa backend-sa -n qa --dry-run=client -o yaml > 2.yaml</code></li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>2.yaml에 아래와 같이 automountServiceAccountToken만 추가해주고 apply</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: backend-sa\n  namespace: qa\nautomountServiceAccountToken: false </code></pre></div>\n</li>\n<li>\n<ol start=\"3\">\n<li>/cs/sa/pod1.yaml을 vi로 열고 serviceAccountName만 backend-sa로 수정 후 apply</li>\n</ol>\n</li>\n<li>\n<ol start=\"4\">\n<li>k get pod -o yaml -n qa | grep “serviceAccount:” 를 해서 조회되지 않는 serviceaccount 인 test01을 삭제한다.</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"3-network-policy\" style=\"position:relative;\"><a href=\"#3-network-policy\" aria-label=\"3 network policy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Network Policy</h2>\n<p>A default-deny network policy avoids accidentally exposing a pod in a namespace that does not define any other Networkpolicy.\n<br>\nCreate a new default DenyPolicy named <code class=\"language-text\">denypolicy</code> in namespace <code class=\"language-text\">testing</code> for all traffic of type ingress+Egress.</p>\n<ul>\n<li>This new NP must deny all Ingress+Egress traffic in namespace <code class=\"language-text\">testing</code>.</li>\n<li>The newly created default Deny network policy application is matched to all pods running in namespace testing.</li>\n</ul>\n<h3 id=\"정답-2\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-2\" aria-label=\"정답 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>기본 NP 만들기\n<ul>\n<li>공식 doc에서 default deny에 대한 템플릿 가져와서 name과 namespace 만 지정해주면됨\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  apiVersion: networking.k8s.io/v1\n  kind: NetworkPolicy\n  metadata:\n    name: denypolicy\n    namespace: testing\n  spec:\n    podSelector: {}\n    policyTypes:\n    - Ingress\n    - Egress</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-rbac\" style=\"position:relative;\"><a href=\"#4-rbac\" aria-label=\"4 rbac permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. RBAC</h2>\n<p>The role bound to the pod’s serviceaccount grants over-loose permission. Complete the following item to reduce the permission set.</p>\n<p>An existing Pod named <code class=\"language-text\">web-pod</code> is already running in namespace <code class=\"language-text\">db</code>.\nEdit the existing Role bound to the serviceaccount <code class=\"language-text\">service-account-web</code> to allow only get operations on resource type of services.\nCreate a role <code class=\"language-text\">role-2</code> in namespace <code class=\"language-text\">db</code> and only allow new role to perform delete operations on resource type of namespaces.\nCreate a new RoleBinding named <code class=\"language-text\">role-2-binding</code>. Bind the newly created Role to the Pod’s serviceaccount</p>\n<p>Note: Do not delete existing rolebinding</p>\n<h3 id=\"정답-3\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-3\" aria-label=\"정답 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li><code class=\"language-text\">service-account-web</code>과 bound되어 있는 <code class=\"language-text\">role-1</code>을 services 만 get할 수 있도록 수정한다. ( k edit role )</li>\n<li><code class=\"language-text\">db</code> namespace에 <code class=\"language-text\">role-2</code>를 생성하고 namepsaces만 delete할 수 있도록 생성한다.</li>\n<li><code class=\"language-text\">role-2-binding</code>이라는 새로운 rolebinding을 생성하여 <code class=\"language-text\">role-2</code>와 <code class=\"language-text\">service-account-web</code>을 연결시킨다.\n<ul>\n<li><code class=\"language-text\">k create rolebinding role-2-binding --role=role-2 --serviceaccount=service-account-web -n d</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-k8s-audit\" style=\"position:relative;\"><a href=\"#5-k8s-audit\" aria-label=\"5 k8s audit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. K8S audit</h2>\n<p>Enable audit logging in cluster. To do this, enable the log backend and ensure that:</p>\n<ul>\n<li>The logs are stored in /var/log/kubernetes/audit-logs.txt</li>\n<li>Logs file can be retained for 10days</li>\n<li>Retain up to 2 old audit log files</li>\n</ul>\n<p>/etc/kubernetes/logpolicy/sampolepolicy.yaml provides the basic strategy. It specifies only what is not recorded.\nNote: The base policy is located on the master node of the cluster.</p>\n<p>Edit and expand basic strategies to record:</p>\n<ul>\n<li>RequestResponse level, persistentvolumes change</li>\n<li>configmaps change to request body in namespace <code class=\"language-text\">front-apps</code></li>\n<li>Changes to configmap and secret in all namespaces at the metadata level</li>\n</ul>\n<p>In addition, add a comprehensive rule to record all other requests at the Metadata level.\nNote: Dont’ forget to apply the modified policy.</p>\n<h3 id=\"정답-4\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-4\" aria-label=\"정답 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>\n<p>kube-apiserver의 yaml파일을 백업해두고 audit enable 및 설정을 문제대로 진행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>audit<span class=\"token punctuation\">-</span>policy<span class=\"token punctuation\">-</span>file=/etc/kubernetes/logpolicy/samplepolicy.yaml\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>audit<span class=\"token punctuation\">-</span>log<span class=\"token punctuation\">-</span>path=/var/log/kubernetes/audit<span class=\"token punctuation\">-</span>logs.txt\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>audit<span class=\"token punctuation\">-</span>log<span class=\"token punctuation\">-</span>maxage=10\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>audit<span class=\"token punctuation\">-</span>log<span class=\"token punctuation\">-</span>maxbackup=2</code></pre></div>\n</li>\n<li>\n<p>kube-apiserver yaml파일에서 volumes과 volumeMount를 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /etc/kubernetes/logpolicy/samplepolicy.yaml\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> audit\n    <span class=\"token key atrule\">readOnly</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/log/kubernetes/\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> audit<span class=\"token punctuation\">-</span>log\n    <span class=\"token key atrule\">readOnly</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> audit\n  <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /etc/kubernetes/logpolicy/samplepolicy.yaml\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> File\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> audit<span class=\"token punctuation\">-</span>log\n  <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /var/log/kubernetes/\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> DirectoryOrCreate</code></pre></div>\n</li>\n<li>\n<p>이와 같이 설정 후 kube-apiserver가 안 뜰 수 있음 <code class=\"language-text\">systemctl daemon-reload</code>, <code class=\"language-text\">sytemctl restart kubelet</code>를 해주어야 함</p>\n</li>\n<li>\n<p>마지막으로 <code class=\"language-text\">tail /var/log/kubernetes/audit-logs.txt</code> 명령으로 정상적 auditing되는 지 검증한다.</p>\n</li>\n<li>\n<p>basic strategy로 주어진 yaml 파일에 3가지 record 요구조건에 해당 하는 정책들을 doc을 참고하여 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> RequestResponse\n      <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"persistentvolumes\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> Metadata\n      <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token comment\"># core API group</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"secrets\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"configmaps\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> Request\n      <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token comment\"># core API group</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"configmaps\"</span><span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">namespaces</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"kube-system\"</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n<ul>\n<li>단, 마지막에 catch-all rule까지 추가해주어야 정답이다.\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># A catch-all rule to log all other requests at the Metadata level.</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> Metadata\n  <span class=\"token comment\"># Long-running requests like watches that fall under this rule will not</span>\n  <span class=\"token comment\"># generate an audit event in RequestReceived.</span>\n  <span class=\"token key atrule\">omitStages</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"RequestReceived\"</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-create-a-secret\" style=\"position:relative;\"><a href=\"#6-create-a-secret\" aria-label=\"6 create a secret permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Create a Secret</h2>\n<p>Get the contents of an existing secret named <code class=\"language-text\">db1-test</code> in namespace <code class=\"language-text\">istio-system</code>\nStore the username field in the name <code class=\"language-text\">/cs/sec/user.txt</code> file and store the password in <code class=\"language-text\">/cs/sec/pass.txt</code> file.</p>\n<p>Note : Do not use or modify created files in the following steps, you can create new temporary files if needed.</p>\n<p>Create a new secret named <code class=\"language-text\">db2-test</code> in <code class=\"language-text\">istio-system</code> namespace as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">username: production-instance\npassword: KvLftKgs4aVH</code></pre></div>\n<p>Finally, create a new pod, it can access secret <code class=\"language-text\">db2-test</code> via volume</p>\n<ul>\n<li>name : <code class=\"language-text\">secret-pod</code></li>\n<li>namespace: <code class=\"language-text\">istio-system</code></li>\n<li>container name: <code class=\"language-text\">dev-container</code></li>\n<li>image : <code class=\"language-text\">nginx</code></li>\n<li>volume name: <code class=\"language-text\">secret-volume</code></li>\n<li>mounting path: <code class=\"language-text\">/etc/secret</code></li>\n</ul>\n<h3 id=\"정답-5\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-5\" aria-label=\"정답 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li><code class=\"language-text\">db1-test1</code> secret에서 username, password를 추출 후 base64로 디코딩된 결과를 각각의 파일에 저장한다.\n<ul>\n<li><code class=\"language-text\">k get secret db1-test -n istio-system -o=jsonpath='{.data.username}' | base64 -d > /cs/sec/user.txt</code></li>\n<li><code class=\"language-text\">k get secret db1-test -n istio-system -o=jsonpath='{.data.password}' | base64 -d > /cs/sec/pass.txt</code></li>\n</ul>\n</li>\n<li><code class=\"language-text\">db2-test</code> secret 생성하기\n<ul>\n<li><code class=\"language-text\">kubectl create secret generic db2-test -n istio-system --from-literal=username=production-instance --from-literal=password=KvLftKgs4aVH</code></li>\n</ul>\n</li>\n<li>pod에 <code class=\"language-text\">db2-test</code> 을 secret 문제의 조건대로 volume mount하여 생성하기\n<ul>\n<li>아래와 같이 작성 후 apply</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n  <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> secret<span class=\"token punctuation\">-</span>pod\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> istio<span class=\"token punctuation\">-</span>system\n  <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> dev<span class=\"token punctuation\">-</span>container\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx\n      <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> secret<span class=\"token punctuation\">-</span>volume\n        <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/etc/secret\"</span>\n        <span class=\"token key atrule\">readOnly</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> secret<span class=\"token punctuation\">-</span>volume\n      <span class=\"token key atrule\">secret</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">secretName</span><span class=\"token punctuation\">:</span> db2<span class=\"token punctuation\">-</span>test</code></pre></div>\n</li>\n</ul>\n<h2 id=\"7-dockerfile\" style=\"position:relative;\"><a href=\"#7-dockerfile\" aria-label=\"7 dockerfile permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. Dockerfile</h2>\n<ul>\n<li>\n<p>Analyze and edit the given Dockerfile <code class=\"language-text\">/cks/docker/dockerfile</code> ( based on ubuntu: 16.04 image ), and fix two instructions that have prominent security/best practices issues in the file</p>\n</li>\n<li>\n<p>Analyze and edit the given manifest file <code class=\"language-text\">/cs/docker/deployment.yaml</code>\nand fix two fields that have prominent security/best practices issues in the file</p>\n<blockquote>\n<p>Note: Do not add or remove configuration settings. simply modify the existing configuration settings so that there is no more secruity/best real money problem with both of the above existing settings.</p>\n</blockquote>\n<blockquote>\n<p>Note: If you need a non-privileged user to exeute any project, please use the user <code class=\"language-text\">nobody</code> with user ID <code class=\"language-text\">65535</code>, just modify it, no need to create it.</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"정답-6\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-6\" aria-label=\"정답 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>\n<ol>\n<li>/cks/docker/dockerfile 부터 살펴보기</li>\n</ol>\n<ul>\n<li><code class=\"language-text\">FROM ubuntu:latest</code> -> <code class=\"language-text\">FROM ubuntu:16.04</code>로 수정</li>\n<li>2번째 USER 를 root -> nobody로 변경</li>\n<li><code class=\"language-text\">sudo docker build .</code></li>\n</ul>\n</li>\n<li>\n<ol start=\"2\">\n<li>/cs/docker/deployment.yaml 살펴보기</li>\n</ol>\n<ul>\n<li>pod쪽의 label을 deployment의 selector.matchLabels에 맞게 수정\n<ul>\n<li>run: couchdb -> app: couchdb로 수정</li>\n</ul>\n</li>\n<li>securityContext의 capability 내역 중 ‘CAP_SYS_ADMIN’을 삭제</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"8-gvisor\" style=\"position:relative;\"><a href=\"#8-gvisor\" aria-label=\"8 gvisor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. gVisor</h2>\n<p>The cluster uses containerd as the CRI runtime. containerd’s default runtime handler is runc.\ncontainer is ready to support additional runtime handler runsc <code class=\"language-text\">gVisor</code></p>\n<ul>\n<li>Create a RuntimeClass named <code class=\"language-text\">untrusted</code> using an existing runtime handler named <code class=\"language-text\">runsc</code>.</li>\n</ul>\n<p>Update all pods in namespace <code class=\"language-text\">server</code> to run on gVisor.\n<br>\nYou can do this at /cks/gVisor/rc. Find a list of templates in yaml</p>\n<h3 id=\"정답-7\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-7\" aria-label=\"정답 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>runtimeclass 생성\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> node.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> RuntimeClass\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> untrusted\n<span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> runsc</code></pre></div>\n</li>\n<li><code class=\"language-text\">server</code> namespace 내에 모든 deployment을 edit하여 runtimeclass 설정\n<ul>\n<li>spec.template.spec.runtimeClassName을 설정</li>\n<li>k edit deploy busybox-run -n server\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runtimeClassName</span><span class=\"token punctuation\">:</span> untrusted <span class=\"token comment\">## 이행 추가</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"9-container-security\" style=\"position:relative;\"><a href=\"#9-container-security\" aria-label=\"9 container security permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. Container security</h2>\n<h3 id=\"9-1\" style=\"position:relative;\"><a href=\"#9-1\" aria-label=\"9 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9-1.</h3>\n<p>Best practice is to design containers as stateless and immutable.</p>\n<ul>\n<li>Check the pods running in namespace <code class=\"language-text\">production</code> and remove any non-stateless or immutable pods.</li>\n<li>Use the following strict interpretations of statelessness and immutability.\n<ul>\n<li>A container of pods capable of storing data within a container must be considered stateless.</li>\n<li>Privileged pods configured to be of any kind must be considered stateless and immutable.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"정답-8\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-8\" aria-label=\"정답 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>privileged : true로 설정된 pod와 hostPath로 volume이 잡힌 pod를 모두 삭제한다.</li>\n</ul>\n<h3 id=\"9-2\" style=\"position:relative;\"><a href=\"#9-2\" aria-label=\"9 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9-2.</h3>\n<p>Modify the deployment <code class=\"language-text\">secdep</code> in the <code class=\"language-text\">sec-ns</code> namespace as follows:</p>\n<ul>\n<li>First, start the container with a user id of 30000</li>\n<li>Second, do not allow a process to get privileges beyond its parent process ( allowPrivilegeEscalation is prohibited )</li>\n<li>Third, load the container’s root file system in a read-only manner( read-only permission to the root file )</li>\n</ul>\n<h3 id=\"정답-9\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-9\" aria-label=\"정답 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>k edit deploy secdep -n sec-ns 를 해서\n<ul>\n<li>pod레벨에서 설정 :  <code class=\"language-text\">spec.securityContext.runAsUser: 30000</code>으로 설정</li>\n<li>존재하는 모든 컨테이너에 대해 아래 내용 설정\n<ul>\n<li>컨테이너 레벨에서 설정 :  <code class=\"language-text\">spec.containers.securityContext.allowPrivilegeEscalation: false</code> 로 설정</li>\n<li>컨테이너 레벨에서 설정 :  <code class=\"language-text\">spec.containers.securityContext.readOnlyRootFilesystem: true</code>로 설정</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-network-policy\" style=\"position:relative;\"><a href=\"#10-network-policy\" aria-label=\"10 network policy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. Network policy</h2>\n<p>Create a NetworkPolicy called <code class=\"language-text\">pod-restriction</code> to restrict access to pod <code class=\"language-text\">product-service</code> running in namepsace <code class=\"language-text\">dev-team</code>.\nAllow only the following pods to connect to <code class=\"language-text\">product-service</code> pod</p>\n<ul>\n<li>All pod from namespace <code class=\"language-text\">qaqa</code></li>\n<li>pod with label <code class=\"language-text\">environment:testing</code> located in any namespace</li>\n</ul>\n<h3 id=\"정답-10\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-10\" aria-label=\"정답 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<p>아래와 같이 구성하면 된다. from 절이 2개 있으면 2개 조건이 or 되고, from절 하나에 2개의 조건이 들어가면 조건이 서로 and처리되는 것으로 이해하면 됨.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> pod<span class=\"token punctuation\">-</span>restriction\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev<span class=\"token punctuation\">-</span>team\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span> testing\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> Ingress\n  <span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> qaqa\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span>\n       <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n         <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n           <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n             <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span> testing</code></pre></div>\n<h2 id=\"11-trivy\" style=\"position:relative;\"><a href=\"#11-trivy\" aria-label=\"11 trivy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11. Trivy</h2>\n<p>Detect severely vulnerable images used by pods in namespace <code class=\"language-text\">kamino</code> using the Trivy open source container scanner\nFind images with High and Critical serverity vulnerabilities and remove pods that use these images</p>\n<ul>\n<li>Note: Trivy is installed only on the master node of the cluster and is not available on the working node.</li>\n</ul>\n<p>You have to switch to the master node of the cluster to use Trivy.</p>\n<h3 id=\"정답-11\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-11\" aria-label=\"정답 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>kamino namespace에 존재하는 모든 pod의 Image 리스트 추출</li>\n<li><code class=\"language-text\">trivy image --severity HIGH,CRITICAL {이미지명}</code> 으로 vulnerable한 이미지 찾아서 해당 pod 삭제</li>\n</ul>\n<h2 id=\"12-apparmor\" style=\"position:relative;\"><a href=\"#12-apparmor\" aria-label=\"12 apparmor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12. Apparmor</h2>\n<p>Apparmor is enabled on <code class=\"language-text\">node02</code> of the cluster’s working node. The platform apparmor configuration file already exists, but has not been implemented.\n<br>\nOn <code class=\"language-text\">node02</code> of the cluster, implementation is located in /etc/apparmor.d/nginx_apparmor is existing Apparmor configuration file.</p>\n<ul>\n<li>Edit in <code class=\"language-text\">/cs/KSSH00401/nginx-deploy.yaml</code> file to apply the apparmor configuration file.</li>\n<li>Finally, apply the mmanifest file and create the pod specified it.</li>\n</ul>\n<br>\n<blockquote>\n<p>Please note that during the test, apparmor is indicated on the working node, so you need to ssh to the working node written at the beginning.\nIn an analog environment, you need ssh to node02 to work.</p>\n</blockquote>\n<h3 id=\"정답-12\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-12\" aria-label=\"정답 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>\n<ol>\n<li>ssh to node02</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li><code class=\"language-text\">apparmor_parser -q /etc/apparmor.d/nginx_apparmor</code></li>\n</ol>\n<ul>\n<li>profile명 알아내고 aa-status로 해당 profile 잘 로드되었는지 확인</li>\n</ul>\n</li>\n<li>\n<ol start=\"3\">\n<li><code class=\"language-text\">/cs/KSSH00401/nginx-deploy.yaml</code>의 deployment definition 파일에서 pod의 annotation에 <code class=\"language-text\">container.apparmor.security.beta.kubernetes.io/&lt;container_name>: &lt;profile_ref></code> 내용 추가</li>\n</ol>\n</li>\n<li>\n<ol start=\"4\">\n<li>k apply -f /cs/KSSH00401/nginx-deploy.yaml</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"13-falco--sysdig\" style=\"position:relative;\"><a href=\"#13-falco--sysdig\" aria-label=\"13 falco  sysdig permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>13. Falco &#x26; sysdig</h2>\n<p>Use the runtime detction tool to detect frequency generation and execution exception selections in a single pod <code class=\"language-text\">tomcat123</code> container.\n<br>\nUse the tool to analyze for at least 30 seconds. Use the filter to check the generated and executed process, write the event to the <code class=\"language-text\">/opt/KSR00101/incidents/summary</code> file, which contains the detected events, in the following format: <code class=\"language-text\">timestamp.uid,username,processName</code>.</p>\n<h3 id=\"정답-13\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-13\" aria-label=\"정답 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>Sysdig 사용 권장\n<ul>\n<li>sysdig -l | grep {time, user, proc, name} 등의 명령으로 output 시 사용할 변수명을 파악할 수 있음</li>\n<li>crictl info | grep sock 명령으로 containerEndpoint가 <code class=\"language-text\">/run/containerd/containerd.sock</code> 임을 확인할 수 있음</li>\n<li>sysdig -M 30 -p ‘%evt.time, %user.name, %proc.name’ —cri /run/containerd/containerd.sock container.name=tomcat123 >> 주어진 파일 경로</li>\n</ul>\n</li>\n<li>Falco\n<ul>\n<li>kubectl describe tomcat123으로 container id 알아내기</li>\n<li>/etc/faloco/falco.yaml에서 <code class=\"language-text\">file_output.enabled: true</code>, <code class=\"language-text\">file_output.filename</code>의 경로를 확인하기\n<ul>\n<li>여기서 수정이 발생하면 <code class=\"language-text\">daemon-reload</code>, <code class=\"language-text\">systemctl restart falco</code>를 수행해준다.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">%evt.time,%user.uid,%proc.name</code></li>\n<li>결과를 output으로 임의의 node02 의 특정 경로에 출력한 후 해당 로그를 local의 <code class=\"language-text\">/opt/KSR00101/incidents/summary</code>에 붙여넣어야 할 듯하다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"14-tls\" style=\"position:relative;\"><a href=\"#14-tls\" aria-label=\"14 tls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>14. TLS</h2>\n<p>strengthen kube-apiserver security configuration through TLS, requirements:</p>\n<ul>\n<li>kube-apiserver is not allowed except version TLS13 and above.</li>\n<li>Cipher suite is <code class=\"language-text\">TLS_AES_128_GC_SHA256</code></li>\n</ul>\n<p>Enhance ETCD security configuration with TLS, requirements:</p>\n<ul>\n<li>cipher suite <code class=\"language-text\">TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</code></li>\n</ul>\n<h3 id=\"정답-14\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-14\" aria-label=\"정답 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>kube-apiserver 강화\n<ul>\n<li>kube-apiserver.yaml파일의 command에 아래 내용 2개 추가\n<ul>\n<li><code class=\"language-text\">- --tls-min-version=VersionTLS13</code></li>\n<li><code class=\"language-text\">- --tls-cipher-suites=TLS_AES_128_GC_SHA256</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>etcd 강화\n<ul>\n<li>etcd.yaml파일의 command에 <code class=\"language-text\">- --ciper-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</code>행 추가\n<ul>\n<li>kube-apiserver와 달리 ‘tls-‘가 없음에 주의</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class=\"language-text\">systemctl daemon-reload</code>, <code class=\"language-text\">systemctl restart kubelet</code></li>\n</ul>\n<h2 id=\"15-enabling-api-server-authentication\" style=\"position:relative;\"><a href=\"#15-enabling-api-server-authentication\" aria-label=\"15 enabling api server authentication permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>15. Enabling API SERVER authentication</h2>\n<p>Kubernetes API server for cluster created by kubeadm. For testing purposes, temporary configuration allows unauthenticated and unauthorized access, granting anonymnous user <code class=\"language-text\">cluster-admin</code> access.\n<br>\nReconfigure the kubernetes API server for cluster. Ensure that only authenticated  and authorized REST requests are allowed.</p>\n<ul>\n<li>Use authorization mode ‘Node, RBAC’ and Access Controller ‘NodeRestriction’.</li>\n<li>Delete the <code class=\"language-text\">system:anonymous</code> Clusterrolebinding to clean up.</li>\n</ul>\n<br>\n<blockquote>\n<p>Note : all kubectl configuration environments/files are also configured to use unauthenticated and unauthorized access. You don’t have to change it. Note,  however, that once the cluster is secured, the configuration of kubectl will not work. You can use the cluster’s original kubectl configuration file <code class=\"language-text\">/etc/ kubernetes/admin.conf</code> on the master node of the cluster. Ensure that authenticated authorization reqeusts are still allowed.</p>\n</blockquote>\n<p>In the simulation environment, the script to initialize this problem is b.sh</p>\n<h3 id=\"정답-15\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-15\" aria-label=\"정답 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<ul>\n<li>kube-apiserver.yaml 파일 수정하기\n<ul>\n<li><code class=\"language-text\">- --authorization-mode=Node,RBAC</code> 로 수정</li>\n<li><code class=\"language-text\">- --enable-admission-plugins=NodeRestriction</code>으로 수정</li>\n</ul>\n</li>\n<li><code class=\"language-text\">system:anonymous</code> clusterrolbinding 삭제하기</li>\n<li>위 작업이 끝난 뒤, 그냥 k get pod시엔 제한되고, master노드에서 <code class=\"language-text\">k get pod -A --kubeconfig /etc/kubernetes/admin.conf</code>를 실행했을 때 정상적으로 pod가 조회되면 성공</li>\n</ul>\n<h2 id=\"16-imagepolicywebhook--container-image-scanning\" style=\"position:relative;\"><a href=\"#16-imagepolicywebhook--container-image-scanning\" aria-label=\"16 imagepolicywebhook  container image scanning permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>16. ImagePolicyWebhook : container image scanning</h2>\n<p>The container mirroring scanner is set up on the cluster, but it is not fully integrated into the cluster’s configuration.\nAfter completion, the container mirror scanner should scan and reject the use of vulnerable mirrors.\n<br></p>\n<blockquote>\n<p>Note: You must complete the entire test on the matser node of the cluster, and all services and files are ready and places on that node.</p>\n</blockquote>\n<br>\nGiven an incomplete configuration in directory `/etc/kubernetes/epconfig`, as well as `https://image-bouncer-webhook.default.svc:1323/image_policy` functional container image scanner.\n<br>\n<ul>\n<li>\n<ol>\n<li>Enable the necessary plugins to create mirror policies.</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>Verify the control configuration and change it to implicit deny.</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>Edit the configuration to correctly point to the provided HTTPS endpoint last, by trying to deploy vulnerable resources <code class=\"language-text\">/cks/img/web1/yaml</code> to test if the configuration is valid.</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"정답-16\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%8B%B5-16\" aria-label=\"정답 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정답</h3>\n<p>처음에 <code class=\"language-text\">k apply /cks/img/web1/yaml</code>를 실행해보면 pod가 정상적으로 생성되는 걸 확인할 수 있다. 이걸 막고 싶은게 우리의 목적이다. 테스트 한 뒤엔 다시 삭제해주자.</p>\n<ul>\n<li><code class=\"language-text\">epconfig</code> 디렉토리 하위에 보면 여러 파일들이 있는데 그 중에 <code class=\"language-text\">admission_configuration.json</code>파일에서 <code class=\"language-text\">imagePolicy.defaultAllow: true</code> 에서 <code class=\"language-text\">imagePolicy.defaultAllow: false</code>로 수정하기 ( 2번 요구사항 )</li>\n<li><code class=\"language-text\">epconfig</code> 디렉토리 하위의 kubeconfig.yaml파일에서 <code class=\"language-text\">clusters.cluster.server</code>의 값이 문제에 따르면 <code class=\"language-text\">https://image-bouncer-webhook.default.svc:1323/image_policy</code>여야 하는데 설정이 안되어 있으므로 추가 설정해주기. (3번 요구사항)</li>\n<li>kube-apiserver 설정하기\n<ul>\n<li><code class=\"language-text\">- --enable-admission-plugins=ImagePolciyWebhook</code>을 추가해주기</li>\n<li><code class=\"language-text\">- --admission-control-config-file=/etc/kubernetes/epconfig/admission_configuration.json</code>을 설정해준다.\n<ul>\n<li>그런데 kube-apiserver pod에서 이 json파일을 런타임시 사용하기 위해서는 volumem으로 마운트해줘야 하기에 volumes, volumeMount 설정을 추가해준다.\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /etc/kubernetes/epconfig\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> epconfig\n  <span class=\"token key atrule\">readOnly</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n.\n.\n.\n<span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /etc/kubernetes/epconfig\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> DirectoryOrCreate\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> epconfig</code></pre></div>\n</li>\n</ul>\n</li>\n<li><code class=\"language-text\">systemctl daemon-reload</code>, <code class=\"language-text\">systemctl restart kubelet</code></li>\n</ul>\n</li>\n<li>마지막으로 <code class=\"language-text\">k apply /cks/img/web1/yaml</code> 명령이 실행 안되는 것으로 테스트 완료</li>\n</ul>","frontmatter":{"date":"November 24, 2023","title":"[CKS] 실제 기출","categories":"DevOps","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/cks-chinaexam/"}},"prev":{"id":"734e5057-c036-5554-93b9-2360a0551aa2","html":"<h3 id=\"1-aem-core-technology의-구성\" style=\"position:relative;\"><a href=\"#1-aem-core-technology%EC%9D%98-%EA%B5%AC%EC%84%B1\" aria-label=\"1 aem core technology의 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. AEM Core Technology의 구성</h3>\n<ul>\n<li>Apache Sling</li>\n<li>OSGI Felix application runtime</li>\n<li>JCR content repository</li>\n</ul>\n<br>\nSling + OSGI Felix 가 Spring과 같은 역할을 하고 있는 것이고, JCR은 DB역할을 하는 것이다. \n<h3 id=\"2-osgi-felix-application-runtime\" style=\"position:relative;\"><a href=\"#2-osgi-felix-application-runtime\" aria-label=\"2 osgi felix application runtime permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. OSGI Felix application runtime</h3>\n<p>OSGI 주요 콘솔은 아래와 같다.</p>\n<ul>\n<li><code class=\"language-text\">/system/console/configMgr</code> 콘솔</li>\n<li><code class=\"language-text\">/system/console/bundles</code> 콘솔</li>\n<li><code class=\"language-text\">/system/console/servicegraph</code> 콘솔\n<ul>\n<li>모든 bundle은 서로 간의 dependency를 가지며, apache felix가 가장 root인 (id=0) bundle이다. 해당 콘솔에서는 bundle간의 의존 관계를 파악할 수 있다.</li>\n<li>하위의 bundle이 죽게 되면 거기에 의존하고 있는 상위의 bundle도 malfunction하게 된다. 이는 트러블슈팅 시에 중요한 개념이다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-데이터-저장-방식\" style=\"position:relative;\"><a href=\"#3-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%80%EC%9E%A5-%EB%B0%A9%EC%8B%9D\" aria-label=\"3 데이터 저장 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 데이터 저장 방식</h3>\n<ul>\n<li>데이터 저장 시 현대기아는 tarMK 방식 사용 (서버의 repository 폴더), Cluster 방식에서는 mmongoDB, AWS s3, Azure blob storage등을 활용할 수도 있다.</li>\n</ul>\n<h3 id=\"4-reusability\" style=\"position:relative;\"><a href=\"#4-reusability\" aria-label=\"4 reusability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Reusability</h3>\n<p>AEM에는 Reusability를 위한 여러가지 컴포넌트가 있는데, Live copy 기능을 활용한 K dealer site가 가장 강력한 예시이다.</p>\n<ul>\n<li>AEM core components</li>\n<li>Multi stie manager : Live copy\n<ul>\n<li>Dealer website</li>\n</ul>\n</li>\n<li>Content Fragment, Experience Fragment</li>\n</ul>\n<h3 id=\"5-caching\" style=\"position:relative;\"><a href=\"#5-caching\" aria-label=\"5 caching permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Caching</h3>\n<ul>\n<li>caching layer\n<ul>\n<li>CDN, dispatcher, application 레벨에서 캐싱이 일어난다.</li>\n<li>CDN, dispatcher에서 캐싱 룰을 적용하지만 <code class=\"language-text\">resonse.setHeader(\"Dispatcher\", \"no-cache\")</code> 와 같이 cache policy를 application level에서 설정하는 경우도 있다.</li>\n</ul>\n</li>\n<li>특히 이벤트/캠페인 시 일관되지 못한 parameter들이 url에 붙게 되는데 이를 AEM에서는 cache의 key로 인식하여 매번 html을 생성하게 되는데 이는 publisher에 대한 부하를 야기하기 때문에 Ignoring URL parameter 사용하면 cache의 key가 아님을 명시해줄 수 있다.\n<ul>\n<li>이는 dispatcher.any에서 설정 가능</li>\n</ul>\n</li>\n<li>그리고 jennifer, scouter 등에서 html에 대해서는 디폴트로 측정을 안하게 되어 있는데 이를 측정하게 enable해야 실제 html생성에 대한 부하까지 확인할 수 있다.</li>\n</ul>\n<h3 id=\"6-monitoring--request-performance\" style=\"position:relative;\"><a href=\"#6-monitoring--request-performance\" aria-label=\"6 monitoring  request performance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Monitoring &#x26; Request performance</h3>\n<ul>\n<li>stack trace 뜨면 어디에 transaction이 위치하는 지 알 수 있다.</li>\n<li><code class=\"language-text\">kill -3 {pid}</code> 명령을 하면 stack trace를 남길 수 있다.\n<ul>\n<li>crx-quickstart/logs/stdout.log</li>\n<li>crx-quickstart/threaddump</li>\n<li>queued thread pool</li>\n<li>qtpXXXXXXX 가 실제 작업 thread id</li>\n<li>I/O bind, CPU bind등에 대한 판단 근거를 알 수 있다.</li>\n<li>S차량 case의 경우 transaction id가 전부 하나로 묶여 있었을 것임.</li>\n</ul>\n</li>\n<li>qtpXXXXX thread 개수는 AEM publishe(jetty)에서 디폴트 200개로 잡혀 있다.\n<ul>\n<li>이를 고려할 때 AEM proxyfilter에서의 connPool size는 200정도로 잡는 것이 무방하다.</li>\n</ul>\n</li>\n<li>로그 볼 때 hx editor + vs code 활용하기</li>\n</ul>\n<h4 id=\"부하테스터-oha\" style=\"position:relative;\"><a href=\"#%EB%B6%80%ED%95%98%ED%85%8C%EC%8A%A4%ED%84%B0-oha\" aria-label=\"부하테스터 oha permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부하테스터 (oha)</h4>\n<ul>\n<li>oha -c 200 -n 2000 {url} 로 간단하게 CLI 기반 부하 테스트가 가능하다.</li>\n<li>qtp* thread는 디폴트 200개이므로 단일 request에 sleep 10초를 걸어둔 url을 위와 같이 200개 동시 부하로 테스트해도 모두 10.X초 이내에 들어온다. 그러나 -c 200을 넘기게 되면 일부 request들이 queueing되면서 response time이 길어지게 된다.</li>\n</ul>\n<h4 id=\"request-sequence\" style=\"position:relative;\"><a href=\"#request-sequence\" aria-label=\"request sequence permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Request sequence</h4>\n<ul>\n<li>request.log에서 request sequence번호에 대해 확인 가능하여 동일한 sequence 번호에 대해 시작과 끝을 확인할 수 있다.\n<ul>\n<li><code class=\"language-text\">java -jar /opt/.../rlog.jar request.log</code> 명령과 같이 rlog.jar 활용하면 reuqest.log의 내용을 시간으로 정리된 상태로 볼 수 있음.</li>\n<li><code class=\"language-text\">perl graph-request-log.pl --title \"Request graph log\" --output output.png reqeust.log | grep gnuplot</code> 명령을 활용하면 request.log의 내용을 시각화하여 볼 수 있고, 이를 통해 평소와 문제 상황에서의 request 처리 시간에 대한 모니터링이 가능하다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"query-performance\" style=\"position:relative;\"><a href=\"#query-performance\" aria-label=\"query performance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query performance</h4>\n<ul>\n<li>JCR에 대한 slow query, populoar query를 확인할 수 있음</li>\n<li>AEM 순수 기능을 이용 많이 할 때 활용하기 좋음. API로 외부에서 데이터 가져오는 시스템의 경우 활용도가 낮음</li>\n</ul>\n<h3 id=\"7-배포\" style=\"position:relative;\"><a href=\"#7-%EB%B0%B0%ED%8F%AC\" aria-label=\"7 배포 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 배포</h3>\n<ul>\n<li>Jenkins 배포 시 purge 자동화 ( GCP ) 가능</li>\n<li>Dispatcher flush도 자동화 할 수도 있음\n<ul>\n<li>Dispatcher flush도 trigger로 작업</li>\n<li>AEM dispatcher custom invalidation script 활용\n<ul>\n<li>invalidateHandler</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>frontend영역은 배포 시 웹팩 사용하도록 개선 됨</li>\n</ul>\n<h3 id=\"8-security\" style=\"position:relative;\"><a href=\"#8-security\" aria-label=\"8 security permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. Security</h3>\n<ul>\n<li>Authentication 방법으로는 현재 SAML 방식의 하나인 keycloak 사용 중\n<ul>\n<li>퍼블도 AEM 로그인을 해야 되도록 설정할 수 있음</li>\n</ul>\n</li>\n<li>Authorization\n<ul>\n<li>crx/de에서 /content/rep:policy 노드의 ‘Access control’에 권한이 정의됨.</li>\n</ul>\n</li>\n<li>kia.com 호출 시 kwpapi.kia.com 호출하는게 CORS가 문제가 된다면 dispatcher 레벨에서 reverseProxy rule 설정해서 넘겨주도록 해야 함\n<ul>\n<li>H 해외 동영상 이슈 ?</li>\n</ul>\n</li>\n<li>graphql instrospection code 비활성화 방법 ?</li>\n</ul>\n<h3 id=\"qa\" style=\"position:relative;\"><a href=\"#qa\" aria-label=\"qa permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q&#x26;A</h3>\n<ul>\n<li>car-managmenet.html 검색 노출\n<ul>\n<li>구글 webmaster에서 비활성화 설정 가능</li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"December 09, 2023","title":"[AEM] Training course","categories":"WEB","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/aem-seminar/"}},"site":{"siteMetadata":{"siteUrl":"https://jjunyong.github.io","comments":{"utterances":{"repo":"jjunyong/jjunyong.github.io"}}}}},"pageContext":{"slug":"/onyou-restrospect/","nextSlug":"/cks-chinaexam/","prevSlug":"/aem-seminar/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}