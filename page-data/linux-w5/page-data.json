{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/linux-w5/",
    "result": {"data":{"cur":{"id":"ece2f8fd-2ae6-590e-8f4d-c3ebc3b23723","html":"<h3 id=\"1-인터넷\" style=\"position:relative;\"><a href=\"#1-%EC%9D%B8%ED%84%B0%EB%84%B7\" aria-label=\"1 인터넷 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 인터넷</h3>\n<ul>\n<li>DNS A레코드에 대하여</li>\n<li>Client - Server 구조</li>\n<li>public ip, private ip, NAT 개념</li>\n</ul>\n<h3 id=\"2-apache-웹-서버\" style=\"position:relative;\"><a href=\"#2-apache-%EC%9B%B9-%EC%84%9C%EB%B2%84\" aria-label=\"2 apache 웹 서버 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Apache 웹 서버</h3>\n<ul>\n<li>웹 브라우저와 웹 서버</li>\n<li>apache 설치, elinks 활용</li>\n<li>apache conf 파일에서 log, document root 설정</li>\n</ul>\n<h3 id=\"3-원격제어-ssh\" style=\"position:relative;\"><a href=\"#3-%EC%9B%90%EA%B2%A9%EC%A0%9C%EC%96%B4-ssh\" aria-label=\"3 원격제어 ssh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 원격제어 SSH</h3>\n<ul>\n<li>SSH client가 설치된 컴퓨터에서 SSH server가 설치된 컴퓨터를 원격제어 할 수 있다.\n<ul>\n<li>이것은 웹브라우저와 웹서버의 관계와 매우 유사하다.</li>\n</ul>\n</li>\n<li>SSH 서버 설치하기\n<ul>\n<li>openssh-server 설치\n<ul>\n<li>sshd가 실행되면 정상이다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-포트port\" style=\"position:relative;\"><a href=\"#4-%ED%8F%AC%ED%8A%B8port\" aria-label=\"4 포트port permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 포트(Port)</h3>\n<ul>\n<li>port는 서버의 ‘문’ 과 같은 역할이다.</li>\n<li>well-known port(0~1024): 22, 80, 443 등</li>\n<li>ssh, http도 다른 port로 접속되게 할 수 있다.</li>\n<li>포트포워딩 : 라우터의 설정에서 private network의  포트 포워딩 할 수 있다.</li>\n</ul>\n<h2 id=\"5-도메인\" style=\"position:relative;\"><a href=\"#5-%EB%8F%84%EB%A9%94%EC%9D%B8\" aria-label=\"5 도메인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 도메인</h2>\n<ul>\n<li>hosts 파일</li>\n<li>도메인 구입</li>\n<li>서브 도메인</li>\n</ul>\n<h3 id=\"dns-동작-원리\" style=\"position:relative;\"><a href=\"#dns-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\" aria-label=\"dns 동작 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNS 동작 원리</h3>\n<ul>\n<li><code class=\"language-text\">dig +trace {domain}</code> 을하면 DNS의 동작원리를 파악할 수 있다.</li>\n<li>도메인의 맨 뒤에는 .이 생략되어 있다. ’.’은 root도메인을 의미한다.</li>\n<li>전세계적으로 도메인은 ‘계층구조’에 의해서 저장, 관리된다.</li>\n<li>모든 컴퓨터는 지정된 로컬 DNS를 지닌다.</li>\n<li>root DNS 서버는 ’.’을 담당하며, 로컬 DNS는 도메인을 resolve하기 위해 최초로 root DNS에 질의한다.</li>\n<li>root DNS 서버는 ‘egoing.ga.’ 중 .ga도메인을 담당하는 최상위 DNS에 대한 정보를 알고 있기 때문에 .ga DNS에 질의한다.</li>\n<li>.ga 최상위 DNS에 egoing.ga.를 질의하여 도메인 소유자 DNS 정보를 얻는다.</li>\n<li>로컬 DNS는 마지막으로 도메인 소유자의 DNS는 해당 도메인의 IP 주소를 로컬 DNS 서버에 반환한다.</li>\n<li>이 ip는 로컬 DNS에 캐싱되며, 요청 컴퓨터에게 반환된다.</li>\n</ul>\n<h2 id=\"6-서버간-동기화-rsync\" style=\"position:relative;\"><a href=\"#6-%EC%84%9C%EB%B2%84%EA%B0%84-%EB%8F%99%EA%B8%B0%ED%99%94-rsync\" aria-label=\"6 서버간 동기화 rsync permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 서버간 동기화 (rsync)</h2>\n<ul>\n<li><code class=\"language-text\">touch test{1..10}</code></li>\n<li>rsync는 ‘증분 백업’을 한다. 즉 변경 사항이 있을 때에만 전송을 하기 때문에 효율적이다.</li>\n<li><code class=\"language-text\">rsync -av src/ dest</code></li>\n<li>다른 서버로 rsync 하기\n<ul>\n<li><code class=\"language-text\">rsync -azP ~/rsync/src/ J6419@192.168.0.3:~/rsync/dest</code>\n<ul>\n<li>-a : archive mode. 백업 시 사용</li>\n<li>-z : 전송 시에 압축(compress)하여 전송</li>\n<li>-P : 전송의 ㅡprogress를 보기</li>\n<li>192.168.0.3 서버에 J6419 계정으로 접속하여 ~/rsync/dest 경로에 원천으로 부터 백업한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>백업 시에는 로컬에서도 rsync를 쓰는 것이 좋다. 왜냐하면 cp 명령어는 기본적으로 권한, 소유, timestamp와 같은 메타데이터를 원천과 동일하게 복사해주지 않기 때문이다.\n<ul>\n<li>cp 명령을 사용해서 백업을 할 경우에는 파일 백업의 경우 ‘-p(preserve)’ 옵션을, 디렉토리 백업일 경우 ‘-a(archive)’ 옵션을 반드시 주어야 한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"7-ssh-key--로그인-없이-인증하기\" style=\"position:relative;\"><a href=\"#7-ssh-key--%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%97%86%EC%9D%B4-%EC%9D%B8%EC%A6%9D%ED%95%98%EA%B8%B0\" aria-label=\"7 ssh key  로그인 없이 인증하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. SSH Key : 로그인 없이 인증하기</h2>\n<h3 id=\"ssh-공개-비공개-key-방식\" style=\"position:relative;\"><a href=\"#ssh-%EA%B3%B5%EA%B0%9C-%EB%B9%84%EA%B3%B5%EA%B0%9C-key-%EB%B0%A9%EC%8B%9D\" aria-label=\"ssh 공개 비공개 key 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSH 공개-비공개 key 방식</h3>\n<ul>\n<li>Client 컴퓨터에서 <code class=\"language-text\">ssh-keygen</code> 하여 public/private 키 페어를 생성한다.\n<ul>\n<li>id_rsa, id_rsa.pub, authorized_keys, known_hosts 파일이 생성됨</li>\n</ul>\n</li>\n<li>id_rsa.pub 공개키 파일의 내용을 접속 대상의 서버 ~/.ssh 디렉토리의 authorized_keys파일 뒤에 붙여준다.\n<ul>\n<li>이를 안전하게 하기 위해 ssh-copy-id 명령을 활용한다.</li>\n<li><code class=\"language-text\">ssh-copy-id J6419@192.168.0.3</code></li>\n</ul>\n</li>\n<li>위에서 언급한 rsync 명령은 기본적으로 ssh로 통신하기 때문에 <code class=\"language-text\">rsync -azP ~/rsync/src/ J6419@192.168.0.3:~/rsync/dest</code> 와 같이 명령을 활용하기 위해서는 로그인 없이 인증하기를 적용해두어야 한다.</li>\n</ul>\n<h3 id=\"rsa\" style=\"position:relative;\"><a href=\"#rsa\" aria-label=\"rsa permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RSA</h3>\n<ul>\n<li>대칭키 암호화 방식\n<ul>\n<li>암호화, 복호화 시 모두 같은 key를 쓰는 방식</li>\n<li>AES256 등</li>\n</ul>\n</li>\n<li>비대칭키 암호화 방식\n<ul>\n<li>암호화 할 때는 private key(비밀키), 복호화 할 때는 public key(공개키)를 쓰는 방식</li>\n<li>RSA 등</li>\n</ul>\n</li>\n</ul>\n<p>SSH Client가 SSH Server에 접속할 때 RSA방식을 이용해서 인증된 유저임을 증명하게 된다.\nclient가 server에 접속 요청을 하게 되면 server에서 random key값을 client에게 보내게 되고 client는 그 key값을 private key로 암호화하여 server에 전송한다.\nserver에서는 전달받은 암호화된 key값을 공개키를 이용하여 복호화하게 되며 그것이 server가 처음에 전송한 random key값과 일치한다면 해당 client를 인증된 사용자로 로그인시켜주는 방식이다.</p>\n<hr>\n<h1 id=\"스터디-문제\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%84%B0%EB%94%94-%EB%AC%B8%EC%A0%9C\" aria-label=\"스터디 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스터디 문제</h1>\n<p>각자의 /home/{사번}/week4에서 문제를 풀고 answer.txt 파일에 답안(1~6번 문제)을  작성해주세요\n처음 디렉토리는 /home/{사번}/인 것으로 가정합니다.</p>\n<ol start=\"0\">\n<li>mkdir week4; cd week4;를 하고 시작해주세요.</li>\n<li>자기 영어이름으로 계정 만들고 비밀번호를 설정해주세요.</li>\n<li>영어이름 계정의 user id와 group의 id를 작성하세요</li>\n<li>영어이름 계정의 홈 디렉토리 밑에 test.txt 파일을 만드세요.</li>\n<li>영어이름 계정을 usrgrp 그룹에 추가하세요</li>\n<li>영어이름 계정의 홈 디렉토리에 usrgrp에 속한 유저가 접근할 수 있도록 권한을 수정하세요.</li>\n<li>사번 계정으로 접속하여 test.txt 파일의 내용에 “hello” 를 추가하고 저장하세요.</li>\n</ol>","excerpt":"1. 인터넷 DNS A레코드에 대하여 Client - Server 구조 public ip, private ip, NAT 개념 2. Apache 웹 서버 웹 브라우저와 웹 서버 apache 설치, elinks 활용 apache conf 파일에서 log, document root 설정 3. 원격제어 SSH SSH client가 설치된 컴퓨터에서 SSH server가 설치된 컴퓨터를 원격제어 할 수 있다. 이것은 웹브라우저와 웹서버의 관계와 매우 유사하다. SSH 서버 설치하기 openssh-server 설치 sshd가 실행되면 정상이다. 4. 포트(Port) port는 서버의 ‘문’ 과 같은 역할이다. well-known port(0~1024): 22, 80, 443 등 ssh, http도 다른 port로 접속되게 할 수 있다. 포트포워딩 : 라우터의 설정에서 private network의  포트 포워딩 할 수 있다. 5. 도메인 hosts 파일 도메인 구입 서브 도메인 DNS 동작 …","frontmatter":{"date":"July 24, 2023","title":"[리눅스 스터디] 5. 인터넷, 네트워크, 도메인","categories":"Linux","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/linux-w5/"}},"next":{"id":"01be2ae5-569a-5b89-b55f-6c513a549a95","html":"<p>디스크 공간 부족으로 docker 컨테이너 관련 파일을 정리하던 도중 실수로 건드려서는 안되는 /var/lib/docker/overlay2 디렉토리 하위의 몇몇 파일들을 삭제했다.\n덕분에 새로운 이미지로 pull하여 컨테이너 기동시 아래와 같은 오류가 났다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker: failed to register layer: open /var/lib/docker/overlay2/edcdf45eb06780a19684899495b55a743160482f6973b3a4cd6901df483f1a1b/committed: no such file or directory.</code></pre></div>\n<ol>\n<li>Docker 데몬 중지</li>\n</ol>\n<p>sudo systemctl stop docker</p>\n<ol start=\"2\">\n<li>/var/lib/docker/overlay2 디렉토리 백업 해두기.</li>\n</ol>\n<p>혹시 모르니 기존 디렉토리는 백업해두자.</p>\n<ol start=\"3\">\n<li>Docker 데몬 초기화</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> -rf /var/lib/docker/*\n<span class=\"token function\">sudo</span> systemctl start docker</code></pre></div>\n<p>이렇게 하니 해결되었는데 구글링해보니 도커를 완전히 삭제 후 재설치해야 해결되는 경우도 있다고 한다. 끝.</p>","frontmatter":{"date":"July 22, 2023","title":"[Error] docker: failed to register layer: open /var/lib/docker/overlay2/... : no such file or directory.","categories":"Error","author":"jjunyong","emoji":"🧢"},"fields":{"slug":"/error-docker-overlay/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://jjunyong.github.io","comments":{"utterances":{"repo":"jjunyong/jjunyong.github.io"}}}}},"pageContext":{"slug":"/linux-w5/","nextSlug":"/error-docker-overlay/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}